{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { AppOwnership, UserInterfaceIdiom } from \"./Constants.types\";\nimport ExponentConstants from \"./ExponentConstants\";\nexport { AppOwnership, UserInterfaceIdiom };\n\nif (!ExponentConstants) {\n  console.warn(\"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\");\n}\n\nvar manifest = null;\n\nif (ExponentConstants && ExponentConstants.manifest) {\n  manifest = ExponentConstants.manifest;\n\n  if (typeof manifest === 'string') {\n    manifest = JSON.parse(manifest);\n  }\n}\n\nvar _ref = ExponentConstants || {},\n    name = _ref.name,\n    constants = _objectWithoutProperties(_ref, [\"name\"]);\n\nexport default _objectSpread(_objectSpread({}, constants), {}, {\n  manifest: manifest,\n  deviceId: constants.installationId,\n  linkingUrl: constants.linkingUri\n});","map":{"version":3,"sources":["../src/Constants.ts"],"names":[],"mappings":";;;;;;;AAAA,SAEE,YAFF,EAME,kBANF;AASA,OAAO,iBAAP;AAEA,SACE,YADF,EAEE,kBAFF;;AAUA,IAAI,CAAC,iBAAL,EAAwB;AACtB,EAAA,OAAO,CAAC,IAAR,CACE,wGADF;AAGD;;AAGD,IAAI,QAAQ,GAAG,IAAf;;AACA,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,QAA3C,EAAqD;AACnD,EAAA,QAAQ,GAAG,iBAAiB,CAAC,QAA7B;;AACA,MAAI,OAAO,QAAP,KAAoB,QAAxB,EAAkC;AAChC,IAAA,QAAQ,GAAG,IAAI,CAAC,KAAL,CAAW,QAAX,CAAX;AACD;AACF;;WAE+B,iBAAiB,IAAI,E;IAA7C,I,QAAA,I;IAAS,S;;AAOjB,+CACK,SADL;AAEE,EAAA,QAAQ,EAAR,QAFF;AAIE,EAAA,QAAQ,EAAE,SAAS,CAAC,cAJtB;AAKE,EAAA,UAAU,EAAE,SAAS,CAAC;AALxB","sourcesContent":["import {\n  AndroidManifest,\n  AppOwnership,\n  IOSManifest,\n  PlatformManifest,\n  NativeConstants,\n  UserInterfaceIdiom,\n  WebManifest,\n} from './Constants.types';\nimport ExponentConstants from './ExponentConstants';\n\nexport {\n  AppOwnership,\n  UserInterfaceIdiom,\n  PlatformManifest,\n  NativeConstants,\n  IOSManifest,\n  AndroidManifest,\n  WebManifest,\n};\n\nif (!ExponentConstants) {\n  console.warn(\n    \"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\"\n  );\n}\n\n// On Android we pass the manifest in JSON form so this step is necessary\nlet manifest = null;\nif (ExponentConstants && ExponentConstants.manifest) {\n  manifest = ExponentConstants.manifest;\n  if (typeof manifest === 'string') {\n    manifest = JSON.parse(manifest);\n  }\n}\n\nconst { name, ...constants } = (ExponentConstants || {}) as any;\n\nexport interface Constants extends NativeConstants {\n  deviceId?: string;\n  linkingUrl?: string;\n}\n\nexport default {\n  ...constants,\n  manifest,\n  // Legacy aliases\n  deviceId: constants.installationId,\n  linkingUrl: constants.linkingUri,\n} as Constants;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}