{"version":3,"file":"Location.js","sourceRoot":"","sources":["../src/Location.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter, Platform, CodedError } from '@unimodules/core';\nimport {\n  PermissionResponse as UMPermissionResponse,\n  PermissionStatus,\n} from 'unimodules-permissions-interface';\n\nimport invariant from 'invariant';\n\nimport ExpoLocation from './ExpoLocation';\n\nconst LocationEventEmitter = new EventEmitter(ExpoLocation);\n\nexport interface ProviderStatus {\n  locationServicesEnabled: boolean;\n  backgroundModeEnabled: boolean;\n  gpsAvailable?: boolean;\n  networkAvailable?: boolean;\n  passiveAvailable?: boolean;\n}\n\nexport interface LocationOptions {\n  accuracy?: LocationAccuracy;\n  enableHighAccuracy?: boolean;\n  timeInterval?: number;\n  distanceInterval?: number;\n  timeout?: number;\n  mayShowUserSettingsDialog?: boolean;\n}\n\nexport interface LocationData {\n  coords: {\n    latitude: number;\n    longitude: number;\n    altitude: number;\n    accuracy: number;\n    heading: number;\n    speed: number;\n  };\n  timestamp: number;\n}\n\nexport interface HeadingData {\n  trueHeading: number;\n  magHeading: number;\n  accuracy: number;\n}\n\nexport interface GeocodedLocation {\n  latitude: number;\n  longitude: number;\n  altitude?: number;\n  accuracy?: number;\n}\n\nexport interface Address {\n  city: string;\n  street: string;\n  region: string;\n  country: string;\n  postalCode: string;\n  name: string;\n}\n\nexport { PermissionStatus };\n\nexport type PermissionDetailsLocationIOS = {\n  scope: 'whenInUse' | 'always';\n};\n\nexport type PermissionDetailsLocationAndroid = {\n  scope: 'fine' | 'coarse' | 'none';\n};\n\nexport interface PermissionResponse extends UMPermissionResponse {\n  ios?: PermissionDetailsLocationIOS;\n  android?: PermissionDetailsLocationAndroid;\n}\n\ninterface LocationTaskOptions {\n  accuracy?: LocationAccuracy;\n  timeInterval?: number; // Android only\n  distanceInterval?: number;\n  showsBackgroundLocationIndicator?: boolean; // iOS only\n  deferredUpdatesDistance?: number;\n  deferredUpdatesTimeout?: number;\n  deferredUpdatesInterval?: number;\n\n  // iOS only\n  activityType?: LocationActivityType;\n  pausesUpdatesAutomatically?: boolean;\n\n  foregroundService?: {\n    notificationTitle: string;\n    notificationBody: string;\n    notificationColor?: string;\n  };\n}\n\ninterface Region {\n  identifier?: string;\n  latitude: number;\n  longitude: number;\n  radius: number;\n  notifyOnEnter?: boolean;\n  notifyOnExit?: boolean;\n}\n\ntype Subscription = {\n  remove: () => void;\n};\ntype LocationCallback = (data: LocationData) => any;\ntype HeadingCallback = (data: HeadingData) => any;\n\nenum LocationAccuracy {\n  Lowest = 1,\n  Low = 2,\n  Balanced = 3,\n  High = 4,\n  Highest = 5,\n  BestForNavigation = 6,\n}\n\nenum LocationActivityType {\n  Other = 1,\n  AutomotiveNavigation = 2,\n  Fitness = 3,\n  OtherNavigation = 4,\n  Airborne = 5,\n}\n\nexport { LocationAccuracy as Accuracy, LocationActivityType as ActivityType };\n\nexport enum GeofencingEventType {\n  Enter = 1,\n  Exit = 2,\n}\n\nexport enum GeofencingRegionState {\n  Unknown = 0,\n  Inside = 1,\n  Outside = 2,\n}\n\nlet nextWatchId = 0;\nlet headingId;\nfunction _getNextWatchId() {\n  nextWatchId++;\n  return nextWatchId;\n}\nfunction _getCurrentWatchId() {\n  return nextWatchId;\n}\n\nlet watchCallbacks: {\n  [watchId: number]: LocationCallback | HeadingCallback;\n} = {};\n\nlet deviceEventSubscription: Subscription | null;\nlet headingEventSub: Subscription | null;\nlet googleApiKey;\nconst googleApiUrl = 'https://maps.googleapis.com/maps/api/geocode/json';\n\nexport async function getProviderStatusAsync(): Promise<ProviderStatus> {\n  return ExpoLocation.getProviderStatusAsync();\n}\n\nexport async function enableNetworkProviderAsync(): Promise<void> {\n  // If network provider is disabled (user's location mode is set to \"Device only\"),\n  // Android's location provider may not give you any results. Use this method in order to ask the user\n  // to change the location mode to \"High accuracy\" which uses Google Play services and enables network provider.\n  // `getCurrentPositionAsync` and `watchPositionAsync` are doing it automatically anyway.\n\n  if (Platform.OS === 'android') {\n    return ExpoLocation.enableNetworkProviderAsync();\n  }\n}\n\nexport async function getCurrentPositionAsync(\n  options: LocationOptions = {}\n): Promise<LocationData> {\n  return ExpoLocation.getCurrentPositionAsync(options);\n}\n\nexport async function getLastKnownPositionAsync(): Promise<LocationData> {\n  return ExpoLocation.getLastKnownPositionAsync();\n}\n\n// Start Compass Module\n\n// To simplify, we will call watchHeadingAsync and wait for one update To ensure accuracy, we wait\n// for a couple of watch updates if the data has low accuracy\nexport async function getHeadingAsync(): Promise<HeadingData> {\n  return new Promise<HeadingData>(async (resolve, reject) => {\n    try {\n      // If there is already a compass active (would be a watch)\n      if (headingEventSub) {\n        let tries = 0;\n        const headingSub = LocationEventEmitter.addListener(\n          'Expo.headingChanged',\n          ({ heading }: { heading: HeadingData }) => {\n            if (heading.accuracy > 1 || tries > 5) {\n              resolve(heading);\n              LocationEventEmitter.removeSubscription(headingSub);\n            } else {\n              tries += 1;\n            }\n          }\n        );\n      } else {\n        let done = false;\n        let subscription;\n        let tries = 0;\n        subscription = await watchHeadingAsync((heading: HeadingData) => {\n          if (!done) {\n            if (heading.accuracy > 1 || tries > 5) {\n              subscription.remove();\n              resolve(heading);\n              done = true;\n            } else {\n              tries += 1;\n            }\n          } else {\n            subscription.remove();\n          }\n        });\n\n        if (done) {\n          subscription.remove();\n        }\n      }\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nexport async function watchHeadingAsync(\n  callback: HeadingCallback\n): Promise<{ remove: () => void }> {\n  // Check if there is already a compass event watch.\n  if (headingEventSub) {\n    _removeHeadingWatcher(headingId);\n  }\n\n  headingEventSub = LocationEventEmitter.addListener(\n    'Expo.headingChanged',\n    ({ watchId, heading }: { watchId: string; heading: HeadingData }) => {\n      const callback = watchCallbacks[watchId];\n      if (callback) {\n        callback(heading);\n      } else {\n        ExpoLocation.removeWatchAsync(watchId);\n      }\n    }\n  );\n\n  headingId = _getNextWatchId();\n  watchCallbacks[headingId] = callback;\n  await ExpoLocation.watchDeviceHeading(headingId);\n  return {\n    remove() {\n      _removeHeadingWatcher(headingId);\n    },\n  };\n}\n\n// Removes the compass listener and sub from JS and Native\nfunction _removeHeadingWatcher(watchId) {\n  if (!watchCallbacks[watchId]) {\n    return;\n  }\n  delete watchCallbacks[watchId];\n  ExpoLocation.removeWatchAsync(watchId);\n  if (headingEventSub) {\n    LocationEventEmitter.removeSubscription(headingEventSub);\n    headingEventSub = null;\n  }\n}\n// End Compass Module\n\nfunction _maybeInitializeEmitterSubscription() {\n  if (!deviceEventSubscription) {\n    deviceEventSubscription = LocationEventEmitter.addListener(\n      'Expo.locationChanged',\n      ({ watchId, location }: { watchId: string; location: LocationData }) => {\n        const callback = watchCallbacks[watchId];\n        if (callback) {\n          callback(location);\n        } else {\n          ExpoLocation.removeWatchAsync(watchId);\n        }\n      }\n    );\n  }\n}\n\nexport async function geocodeAsync(address: string): Promise<Array<GeocodedLocation>> {\n  return ExpoLocation.geocodeAsync(address).catch(error => {\n    const platformUsesGoogleMaps = Platform.OS === 'android' || Platform.OS === 'web';\n\n    if (platformUsesGoogleMaps && error.code === 'E_NO_GEOCODER') {\n      if (!googleApiKey) {\n        throw new CodedError(\n          error.code,\n          `${error.message} Please set a Google API Key to use geocoding.`\n        );\n      }\n      return _googleGeocodeAsync(address);\n    }\n    throw error;\n  });\n}\n\nexport async function reverseGeocodeAsync(location: {\n  latitude: number;\n  longitude: number;\n}): Promise<Address[]> {\n  if (typeof location.latitude !== 'number' || typeof location.longitude !== 'number') {\n    throw new TypeError(\n      'Location should be an object with number properties `latitude` and `longitude`.'\n    );\n  }\n  return ExpoLocation.reverseGeocodeAsync(location).catch(error => {\n    const platformUsesGoogleMaps = Platform.OS === 'android' || Platform.OS === 'web';\n\n    if (platformUsesGoogleMaps && error.code === 'E_NO_GEOCODER') {\n      if (!googleApiKey) {\n        throw new CodedError(\n          error.code,\n          `${error.message} Please set a Google API Key to use geocoding.`\n        );\n      }\n      return _googleReverseGeocodeAsync(location);\n    }\n    throw error;\n  });\n}\n\nexport function setApiKey(apiKey: string) {\n  googleApiKey = apiKey;\n}\n\nasync function _googleGeocodeAsync(address: string): Promise<GeocodedLocation[]> {\n  const result = await fetch(`${googleApiUrl}?key=${googleApiKey}&address=${encodeURI(address)}`);\n  const resultObject = await result.json();\n\n  if (resultObject.status === 'ZERO_RESULTS') {\n    return [];\n  }\n\n  assertGeocodeResults(resultObject);\n\n  return resultObject.results.map(result => {\n    let location = result.geometry.location;\n    // TODO: This is missing a lot of props\n    return {\n      latitude: location.lat,\n      longitude: location.lng,\n    };\n  });\n}\n\nasync function _googleReverseGeocodeAsync(options: {\n  latitude: number;\n  longitude: number;\n}): Promise<Address[]> {\n  const result = await fetch(\n    `${googleApiUrl}?key=${googleApiKey}&latlng=${options.latitude},${options.longitude}`\n  );\n  const resultObject = await result.json();\n\n  if (resultObject.status === 'ZERO_RESULTS') {\n    return [];\n  }\n\n  assertGeocodeResults(resultObject);\n\n  return resultObject.results.map(result => {\n    const address: any = {};\n\n    result.address_components.forEach(component => {\n      if (component.types.includes('locality')) {\n        address.city = component.long_name;\n      } else if (component.types.includes('street_address')) {\n        address.street = component.long_name;\n      } else if (component.types.includes('administrative_area_level_1')) {\n        address.region = component.long_name;\n      } else if (component.types.includes('country')) {\n        address.country = component.long_name;\n      } else if (component.types.includes('postal_code')) {\n        address.postalCode = component.long_name;\n      } else if (component.types.includes('point_of_interest')) {\n        address.name = component.long_name;\n      }\n    });\n    return address as Address;\n  });\n}\n\n// https://developers.google.com/maps/documentation/geocoding/intro\nfunction assertGeocodeResults(resultObject: any): void {\n  const { status, error_message } = resultObject;\n  if (status !== 'ZERO_RESULTS' && status !== 'OK') {\n    if (error_message) {\n      throw new CodedError(status, error_message);\n    } else if (status === 'UNKNOWN_ERROR') {\n      throw new CodedError(\n        status,\n        'the request could not be processed due to a server error. The request may succeed if you try again.'\n      );\n    }\n    throw new CodedError(status, `An error occurred during geocoding.`);\n  }\n}\n\n// Polyfill: navigator.geolocation.watchPosition\nfunction watchPosition(\n  success: GeoSuccessCallback,\n  error: GeoErrorCallback,\n  options: LocationOptions\n) {\n  _maybeInitializeEmitterSubscription();\n\n  const watchId = _getNextWatchId();\n  watchCallbacks[watchId] = success;\n\n  ExpoLocation.watchPositionImplAsync(watchId, options).catch(err => {\n    _removeWatcher(watchId);\n    error({ watchId, message: err.message, code: err.code });\n  });\n\n  return watchId;\n}\n\nexport async function watchPositionAsync(options: LocationOptions, callback: LocationCallback) {\n  _maybeInitializeEmitterSubscription();\n\n  const watchId = _getNextWatchId();\n  watchCallbacks[watchId] = callback;\n  await ExpoLocation.watchPositionImplAsync(watchId, options);\n\n  return {\n    remove() {\n      _removeWatcher(watchId);\n    },\n  };\n}\n\n// Polyfill: navigator.geolocation.clearWatch\nfunction clearWatch(watchId: number) {\n  _removeWatcher(watchId);\n}\n\nfunction _removeWatcher(watchId) {\n  // Do nothing if we have already removed the subscription\n  if (!watchCallbacks[watchId]) {\n    return;\n  }\n\n  ExpoLocation.removeWatchAsync(watchId);\n  delete watchCallbacks[watchId];\n  if (Object.keys(watchCallbacks).length === 0 && deviceEventSubscription) {\n    LocationEventEmitter.removeSubscription(deviceEventSubscription);\n    deviceEventSubscription = null;\n  }\n}\n\ntype GeoSuccessCallback = (data: LocationData) => void;\ntype GeoErrorCallback = (error: any) => void;\n\nfunction getCurrentPosition(\n  success: GeoSuccessCallback,\n  error: GeoErrorCallback = () => {},\n  options: LocationOptions = {}\n): void {\n  invariant(typeof success === 'function', 'Must provide a valid success callback.');\n\n  invariant(typeof options === 'object', 'options must be an object.');\n\n  _getCurrentPositionAsyncWrapper(success, error, options);\n}\n\n// This function exists to let us continue to return undefined from getCurrentPosition, while still\n// using async/await for the internal implementation of it\nasync function _getCurrentPositionAsyncWrapper(\n  success: GeoSuccessCallback,\n  error: GeoErrorCallback,\n  options: LocationOptions\n): Promise<any> {\n  try {\n    await ExpoLocation.requestPermissionsAsync();\n    const result = await getCurrentPositionAsync(options);\n    success(result);\n  } catch (e) {\n    error(e);\n  }\n}\n\nexport async function getPermissionsAsync(): Promise<PermissionResponse> {\n  return await ExpoLocation.getPermissionsAsync();\n}\n\nexport async function requestPermissionsAsync(): Promise<PermissionResponse> {\n  return await ExpoLocation.requestPermissionsAsync();\n}\n\n// --- Location service\n\nexport async function hasServicesEnabledAsync(): Promise<boolean> {\n  return await ExpoLocation.hasServicesEnabledAsync();\n}\n\n// --- Background location updates\n\nfunction _validateTaskName(taskName: string) {\n  invariant(taskName && typeof taskName === 'string', '`taskName` must be a non-empty string.');\n}\n\nexport async function isBackgroundLocationAvailableAsync(): Promise<boolean> {\n  const providerStatus = await getProviderStatusAsync();\n  return providerStatus.backgroundModeEnabled;\n}\n\nexport async function startLocationUpdatesAsync(\n  taskName: string,\n  options: LocationTaskOptions = { accuracy: LocationAccuracy.Balanced }\n): Promise<void> {\n  _validateTaskName(taskName);\n  await ExpoLocation.startLocationUpdatesAsync(taskName, options);\n}\n\nexport async function stopLocationUpdatesAsync(taskName: string): Promise<void> {\n  _validateTaskName(taskName);\n  await ExpoLocation.stopLocationUpdatesAsync(taskName);\n}\n\nexport async function hasStartedLocationUpdatesAsync(taskName: string): Promise<boolean> {\n  _validateTaskName(taskName);\n  return ExpoLocation.hasStartedLocationUpdatesAsync(taskName);\n}\n\n// --- Geofencing\n\nfunction _validateRegions(regions: Array<Region>) {\n  if (!regions || regions.length === 0) {\n    throw new Error(\n      'Regions array cannot be empty. Use `stopGeofencingAsync` if you want to stop geofencing all regions'\n    );\n  }\n  for (const region of regions) {\n    if (typeof region.latitude !== 'number') {\n      throw new TypeError(`Region's latitude must be a number. Got '${region.latitude}' instead.`);\n    }\n    if (typeof region.longitude !== 'number') {\n      throw new TypeError(\n        `Region's longitude must be a number. Got '${region.longitude}' instead.`\n      );\n    }\n    if (typeof region.radius !== 'number') {\n      throw new TypeError(`Region's radius must be a number. Got '${region.radius}' instead.`);\n    }\n  }\n}\n\nexport async function startGeofencingAsync(\n  taskName: string,\n  regions: Array<Region> = []\n): Promise<void> {\n  _validateTaskName(taskName);\n  _validateRegions(regions);\n  await ExpoLocation.startGeofencingAsync(taskName, { regions });\n}\n\nexport async function stopGeofencingAsync(taskName: string): Promise<void> {\n  _validateTaskName(taskName);\n  await ExpoLocation.stopGeofencingAsync(taskName);\n}\n\nexport async function hasStartedGeofencingAsync(taskName: string): Promise<boolean> {\n  _validateTaskName(taskName);\n  return ExpoLocation.hasStartedGeofencingAsync(taskName);\n}\n\nexport function installWebGeolocationPolyfill(): void {\n  if (Platform.OS !== 'web') {\n    // Polyfill navigator.geolocation for interop with the core react-native and web API approach to\n    // geolocation\n    // @ts-ignore\n    window.navigator.geolocation = {\n      getCurrentPosition,\n      watchPosition,\n      clearWatch,\n\n      // We don't polyfill stopObserving, this is an internal method that probably should not even exist\n      // in react-native docs\n      stopObserving: () => {},\n    };\n  }\n}\n\nexport {\n  // For internal purposes\n  LocationEventEmitter as EventEmitter,\n  _getCurrentWatchId,\n};\n"]}