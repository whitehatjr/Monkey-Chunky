{"version":3,"file":"Creator.web.js","sourceRoot":"","sources":["../../src/takeSnapshotAsync/Creator.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { CaptureOptions } from 'react-native-view-shot';\nimport uuidv4 from 'uuid/v4';\n\nimport { batchResolveAllFontsAsync } from './Fonts.web';\nimport { processAllImagesAsync } from './Images.web';\nimport * as util from './Utils.web';\n\ntype FillStyle = string | CanvasGradient | CanvasPattern;\n\ninterface SVGOptions {\n  bgcolor?: FillStyle;\n  width?: number;\n  height?: number;\n  style?: any;\n  quality?: number;\n  missingImageSource?: string;\n  preventCaching?: boolean;\n}\n\nasync function generateSVGAsync(\n  element: Element,\n  { width, height, bgcolor, style }: SVGOptions = {}\n): Promise<string> {\n  const clone = await cloneElement(element);\n\n  if (clone === undefined) {\n    throw new Error('Cannot clone null element');\n  }\n\n  await Promise.all([batchResolveAllFontsAsync(clone), processAllImagesAsync(clone)]);\n\n  if (bgcolor) {\n    clone.style.backgroundColor = bgcolor as string;\n  }\n\n  if (width) {\n    clone.style.width = `${width}px`;\n  }\n  if (height) {\n    clone.style.height = `${height}px`;\n  }\n\n  if (style) {\n    Object.assign(clone.style, style);\n  }\n\n  const svgDataUri = await makeSVGDataURIAsync(\n    clone,\n    width || util.getWidthForElement(element),\n    height || util.getHeightForElement(element)\n  );\n  return svgDataUri;\n}\n\nexport async function createSVGAsync(element: Element, options: SVGOptions = {}): Promise<string> {\n  return await generateSVGAsync(element, options);\n}\n\nexport async function createPixelDataAsync(\n  element: Element,\n  options: CaptureOptions\n): Promise<Uint8ClampedArray> {\n  const canvas = await draw(element, options);\n\n  const context = canvas.getContext('2d');\n  if (!context) {\n    throw new Error('Canvas context is not supported.');\n  }\n\n  return context.getImageData(\n    0,\n    0,\n    util.getWidthForElement(element),\n    util.getHeightForElement(element)\n  ).data;\n}\n\nexport async function createPNGAsync(element: Element, options: CaptureOptions): Promise<string> {\n  const canvas = await draw(element, options);\n  return await canvas.toDataURL('image/png');\n}\n\nexport async function createJPEGAsync(\n  element: Element,\n  { quality, ...options }: CaptureOptions\n): Promise<string> {\n  const canvas = await draw(element, options);\n  return await canvas.toDataURL('image/jpeg', quality);\n}\n\nexport async function createBlobAsync(\n  element: Element,\n  { quality, ...options }: CaptureOptions\n): Promise<Blob> {\n  const canvas = await draw(element, options);\n  return await util.getBlobFromCanvasAsync(canvas, quality);\n}\n\nasync function draw(\n  element: Element,\n  options: {\n    width?: number;\n    height?: number;\n    bgcolor?: string | CanvasGradient | CanvasPattern;\n    [key: string]: any;\n  }\n): Promise<HTMLCanvasElement> {\n  const fromSVG = await generateSVGAsync(element, options);\n  const image = await util.getImageElementFromURIAsync(fromSVG);\n\n  const canvas = newCanvas(element, options);\n  const context = canvas.getContext('2d');\n  if (!context) {\n    throw new Error('Canvas context is not supported.');\n  }\n  context.drawImage(image, 0, 0);\n  return canvas;\n}\n\nfunction newCanvas(\n  element: Element,\n  options: { width?: number; height?: number; bgcolor?: string | CanvasGradient | CanvasPattern }\n) {\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = options.width || util.getWidthForElement(element);\n  canvas.height = options.height || util.getHeightForElement(element);\n\n  if (options.bgcolor) {\n    const ctx = canvas.getContext('2d');\n    if (ctx) {\n      ctx.fillStyle = options.bgcolor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n  }\n\n  return canvas;\n}\n\nasync function getDeepCopyForElement(\n  element: HTMLCanvasElement | Element\n): Promise<HTMLImageElement | Node> {\n  if (element instanceof HTMLCanvasElement) {\n    const dataURL = element.toDataURL();\n    return util.getImageElementFromURIAsync(dataURL);\n  }\n  return element.cloneNode(false);\n}\n\nasync function cloneElement(\n  element: HTMLCanvasElement | Element\n): Promise<HTMLElement | undefined> {\n  const clonedNode = await getDeepCopyForElement(element);\n  const clone = await cloneChildren(element, clonedNode);\n  return await processClone(element, clone as any);\n}\n\nasync function cloneChildren(\n  { childNodes },\n  clone: HTMLImageElement | Node\n): Promise<HTMLElement | Node> {\n  const children: any[] = Array.from(childNodes);\n  if (children.length === 0) {\n    return clone;\n  }\n\n  for (const child of children) {\n    const childClone = await cloneElement(child);\n    if (childClone) {\n      clone.appendChild(childClone);\n    }\n  }\n\n  return clone;\n}\nasync function processClone(original: Element, clone: HTMLElement): Promise<HTMLElement | any> {\n  if (!(clone instanceof HTMLElement)) {\n    // TODO: Bacon: Avoid or throw error\n    return clone;\n  }\n\n  const source = window.getComputedStyle(original);\n  const target = clone.style;\n\n  if (source.cssText) {\n    target.cssText = source.cssText;\n  } else {\n    for (const prop in source) {\n      const name = source[prop];\n      target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n    }\n  }\n\n  clonePseudoElement(':before', original, clone);\n  clonePseudoElement(':after', original, clone);\n  mutateInputElement(original, clone);\n  mutateSVGElementClone(clone);\n  return clone;\n}\n\nfunction clonePseudoElement(element: string, original: Element, clone: HTMLElement): void {\n  const style = window.getComputedStyle(original, element);\n  const content = style.getPropertyValue('content');\n\n  if (content === '' || content === 'none') {\n    return;\n  }\n\n  const className = uuidv4();\n  clone.className = `${clone.className} ${className}`;\n  const styleElement = document.createElement('style');\n  styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n  clone.appendChild(styleElement);\n}\n\nfunction formatPseudoElementStyle(\n  className: string,\n  element: string,\n  style: CSSStyleDeclaration\n): Text {\n  const selector = `.${className}:${element}`;\n  const cssText = style.cssText ? formatCSSText(style) : formatCSSProperties(style);\n  return document.createTextNode(`${selector}{${cssText}}`);\n}\n\nfunction formatCSSText(style: CSSStyleDeclaration): string {\n  const content = style.getPropertyValue('content');\n  return `${style.cssText} content: ${content};`;\n}\n\nfunction formatCSSProperties(style: CSSStyleDeclaration): string {\n  const parsed = Array.from(style)\n    .map(name => formatProperty(name, style))\n    .join('; ');\n\n  return `${parsed};`;\n}\n\nfunction formatProperty(name: string, style: CSSStyleDeclaration): string {\n  return `${name}: ${style.getPropertyValue(name)}${\n    style.getPropertyPriority(name) ? ' !important' : ''\n  }`;\n}\n\nfunction mutateInputElement(element: Element, clone: HTMLElement): void {\n  if (element instanceof HTMLTextAreaElement) {\n    clone.innerHTML = element.value;\n  }\n  if (element instanceof HTMLInputElement) {\n    clone.setAttribute('value', element.value);\n  }\n}\n\nfunction mutateSVGElementClone(element: HTMLElement): void {\n  if (!(element instanceof SVGElement)) {\n    return;\n  }\n  element.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n  if (element instanceof SVGRectElement) {\n    for (const attribute of ['width', 'height']) {\n      const value = element.getAttribute(attribute);\n      if (!value) {\n        continue;\n      }\n      element.style.setProperty(attribute, value);\n    }\n  }\n}\n\nasync function makeSVGDataURIAsync(\n  element: HTMLElement,\n  width: number,\n  height: number\n): Promise<string> {\n  element.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  const serializedNode: string = new XMLSerializer().serializeToString(element);\n  const xhtml: string = util.getEscapedXHTMLString(serializedNode);\n\n  const foreignObject = `<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">${xhtml}</foreignObject>`;\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\">${foreignObject}</svg>`;\n  return `data:image/svg+xml;charset=utf-8,${svg}`;\n}\n"]}