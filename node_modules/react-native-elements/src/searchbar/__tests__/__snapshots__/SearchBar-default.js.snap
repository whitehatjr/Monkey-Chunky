// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Default SearchBar component Props clearIcon and without clearIcon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#393e42",
      "borderBottomColor": "#000",
      "borderBottomWidth": 1,
      "borderTopColor": "#000",
      "borderTopWidth": 1,
      "padding": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#303337",
        "borderBottomWidth": 0,
        "borderRadius": 3,
        "minHeight": 30,
        "overflow": "hidden",
      }
    }
    inputStyle={
      Object {
        "color": "#86939e",
        "marginLeft": 10,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#86939e"
        name="search"
        size={18}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#86939e"
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Default SearchBar component Props clearIcon and without custom clearIcon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#393e42",
      "borderBottomColor": "#000",
      "borderBottomWidth": 1,
      "borderTopColor": "#000",
      "borderTopWidth": 1,
      "padding": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#303337",
        "borderBottomWidth": 0,
        "borderRadius": 3,
        "minHeight": 30,
        "overflow": "hidden",
      }
    }
    inputStyle={
      Object {
        "color": "#86939e",
        "marginLeft": 10,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#86939e"
        name="search"
        size={18}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#86939e"
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Default SearchBar component Props clearIcon and without no clearIcon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#393e42",
      "borderBottomColor": "#000",
      "borderBottomWidth": 1,
      "borderTopColor": "#000",
      "borderTopWidth": 1,
      "padding": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#303337",
        "borderBottomWidth": 0,
        "borderRadius": 3,
        "minHeight": 30,
        "overflow": "hidden",
      }
    }
    inputStyle={
      Object {
        "color": "#86939e",
        "marginLeft": 10,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#86939e"
        name="search"
        size={18}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#86939e"
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Default SearchBar component Props searchIcon and without custom searchIcon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#393e42",
      "borderBottomColor": "#000",
      "borderBottomWidth": 1,
      "borderTopColor": "#000",
      "borderTopWidth": 1,
      "padding": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#303337",
        "borderBottomWidth": 0,
        "borderRadius": 15,
        "minHeight": 30,
        "overflow": "hidden",
      }
    }
    inputStyle={
      Object {
        "color": "#86939e",
        "marginLeft": 10,
      }
    }
    leftIcon={<View />}
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#86939e"
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Default SearchBar component Props searchIcon and without no searchIcon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#393e42",
      "borderBottomColor": "#000",
      "borderBottomWidth": 1,
      "borderTopColor": "#000",
      "borderTopWidth": 1,
      "padding": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#303337",
        "borderBottomWidth": 0,
        "borderRadius": 3,
        "minHeight": 30,
        "overflow": "hidden",
      }
    }
    inputStyle={
      Object {
        "color": "#86939e",
        "marginLeft": 10,
      }
    }
    leftIcon={null}
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#86939e"
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Default SearchBar component Props searchIcon and without searchIcon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#e1e8ee",
      "borderBottomColor": "#e1e1e1",
      "borderBottomWidth": 1,
      "borderTopColor": "#e1e1e1",
      "borderTopWidth": 1,
      "padding": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#bdc6cf",
        "borderBottomWidth": 0,
        "borderRadius": 3,
        "minHeight": 30,
        "overflow": "hidden",
      }
    }
    inputStyle={
      Object {
        "color": "#86939e",
        "marginLeft": 10,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#86939e"
        name="search"
        size={50}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#86939e"
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Default SearchBar component Props showLoading, loadingProps 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#393e42",
      "borderBottomColor": "#000",
      "borderBottomWidth": 1,
      "borderTopColor": "#000",
      "borderTopWidth": 1,
      "height": 70,
      "padding": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#303337",
        "borderBottomWidth": 0,
        "borderRadius": 3,
        "minHeight": 30,
        "overflow": "hidden",
      }
    }
    inputStyle={
      Object {
        "color": "#86939e",
        "marginLeft": 10,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#86939e"
        name="search"
        size={18}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#86939e"
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <ActivityIndicator
          animating={true}
          color="#999999"
          hidesWhenStopped={true}
          size="small"
          style={
            Object {
              "flex": 1,
              "marginRight": 5,
            }
          }
        />
      </View>
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Default SearchBar component should render with a preset value 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#393e42",
      "borderBottomColor": "#000",
      "borderBottomWidth": 1,
      "borderTopColor": "#000",
      "borderTopWidth": 1,
      "padding": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#303337",
        "borderBottomWidth": 0,
        "borderRadius": 3,
        "minHeight": 30,
        "overflow": "hidden",
      }
    }
    inputStyle={
      Object {
        "color": "#86939e",
        "marginLeft": 10,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#86939e"
        name="search"
        size={18}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#86939e"
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <Themed.Icon
          color="#86939e"
          name="clear"
          onPress={[Function]}
          size={18}
          type="material"
        />
      </View>
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value="Chickens"
  />
</View>
`;

exports[`Default SearchBar component should render without issues 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#393e42",
      "borderBottomColor": "#000",
      "borderBottomWidth": 1,
      "borderTopColor": "#000",
      "borderTopWidth": 1,
      "padding": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#303337",
        "borderBottomWidth": 0,
        "borderRadius": 3,
        "minHeight": 30,
        "overflow": "hidden",
      }
    }
    inputStyle={
      Object {
        "color": "#86939e",
        "marginLeft": 10,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#86939e"
        name="search"
        size={18}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#86939e"
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;
