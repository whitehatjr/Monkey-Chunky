// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Slider component should apply values from theme 1`] = `[Function]`;

exports[`Slider component should bound the max value 1`] = `
<View
  animationType="timing"
  onLayout={[Function]}
  step={0}
  style={
    Object {
      "height": 40,
      "justifyContent": "center",
    }
  }
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={15}
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "#b3b3b3",
        "borderRadius": 2,
        "height": 4,
      }
    }
  />
  <AnimatedComponent
    style={
      Object {
        "backgroundColor": "#3f3f3f",
        "borderRadius": 2,
        "height": 0,
        "marginTop": -0,
        "position": "absolute",
        "width": 0,
      }
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 10,
        "height": 0,
        "position": "absolute",
        "top": 22,
        "transform": Array [
          Object {
            "translateX": 0,
          },
          Object {
            "translateY": -0,
          },
        ],
        "width": 0,
      }
    }
    testID="sliderThumb"
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
</View>
`;

exports[`Slider component should bound the min value 1`] = `
<View
  animationType="timing"
  onLayout={[Function]}
  step={0}
  style={
    Object {
      "height": 40,
      "justifyContent": "center",
    }
  }
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={2}
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "#b3b3b3",
        "borderRadius": 2,
        "height": 4,
      }
    }
  />
  <AnimatedComponent
    style={
      Object {
        "backgroundColor": "#3f3f3f",
        "borderRadius": 2,
        "height": 0,
        "marginTop": -0,
        "position": "absolute",
        "width": 0,
      }
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 10,
        "height": 0,
        "position": "absolute",
        "top": 22,
        "transform": Array [
          Object {
            "translateX": 0,
          },
          Object {
            "translateY": -0,
          },
        ],
        "width": 0,
      }
    }
    testID="sliderThumb"
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
</View>
`;

exports[`Slider component should pass down Thumb transform values 1`] = `
<View
  animationType="timing"
  onLayout={[Function]}
  step={0}
  style={
    Object {
      "height": 40,
      "justifyContent": "center",
    }
  }
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "#b3b3b3",
        "borderRadius": 2,
        "height": 4,
      }
    }
  />
  <AnimatedComponent
    style={
      Object {
        "backgroundColor": "#3f3f3f",
        "borderRadius": 2,
        "height": 0,
        "marginTop": -0,
        "position": "absolute",
        "width": 0,
      }
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 10,
        "height": 0,
        "position": "absolute",
        "top": 22,
        "transform": Array [
          Object {
            "translateX": 0,
          },
          Object {
            "translateY": -0,
          },
          Object {
            "scale": 2,
          },
        ],
        "width": 0,
      }
    }
    testID="sliderThumb"
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
</View>
`;

exports[`Slider component should render vertically 1`] = `
<View
  animationType="timing"
  onLayout={[Function]}
  step={0}
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "column",
      "width": 40,
    }
  }
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "#b3b3b3",
        "borderRadius": 2,
        "flex": 1,
        "width": 4,
      }
    }
  />
  <AnimatedComponent
    style={
      Object {
        "backgroundColor": "#3f3f3f",
        "borderRadius": 2,
        "flex": 1,
        "height": 0,
        "marginLeft": -0,
        "position": "absolute",
        "width": 0,
      }
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 10,
        "height": 0,
        "left": 22,
        "position": "absolute",
        "transform": Array [
          Object {
            "translateX": -0,
          },
          Object {
            "translateY": 0,
          },
        ],
        "width": 0,
      }
    }
    testID="sliderThumb"
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
</View>
`;

exports[`Slider component should render with ThumbTouchRect 1`] = `
<View
  animationType="timing"
  onLayout={[Function]}
  step={0}
  style={
    Object {
      "height": 40,
      "justifyContent": "center",
    }
  }
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "#b3b3b3",
        "borderRadius": 2,
        "height": 4,
      }
    }
  />
  <AnimatedComponent
    style={
      Object {
        "backgroundColor": "#3f3f3f",
        "borderRadius": 2,
        "height": 0,
        "marginTop": -0,
        "position": "absolute",
        "width": 0,
      }
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 10,
        "height": 0,
        "position": "absolute",
        "top": 22,
        "transform": Array [
          Object {
            "translateX": 0,
          },
          Object {
            "translateY": -0,
          },
        ],
        "width": 0,
      }
    }
    testID="sliderThumb"
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "orange",
        "bottom": 0,
        "left": 0,
        "opacity": 0.5,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <AnimatedComponent
      pointerEvents="none"
      style={
        Object {
          "height": 40,
          "left": 0,
          "top": NaN,
          "width": 40,
        }
      }
    />
  </View>
</View>
`;

exports[`Slider component should render without issues 1`] = `
<View
  animationType="timing"
  onLayout={[Function]}
  step={0}
  style={
    Object {
      "height": 40,
      "justifyContent": "center",
    }
  }
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "#b3b3b3",
        "borderRadius": 2,
        "height": 4,
      }
    }
  />
  <AnimatedComponent
    style={
      Object {
        "backgroundColor": "#3f3f3f",
        "borderRadius": 2,
        "height": 0,
        "marginTop": -0,
        "position": "absolute",
        "width": 0,
      }
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 10,
        "height": 0,
        "position": "absolute",
        "top": 22,
        "transform": Array [
          Object {
            "translateX": 0,
          },
          Object {
            "translateY": -0,
          },
        ],
        "width": 0,
      }
    }
    testID="sliderThumb"
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
</View>
`;
