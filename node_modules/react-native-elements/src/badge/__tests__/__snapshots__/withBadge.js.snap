// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`withBadge HOC just value should render when given a function as value 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "justifyContent": "center",
      "position": "relative",
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.2}
  />
  <Themed.Badge
    containerStyle={
      Object {
        "bottom": undefined,
        "left": undefined,
        "position": "absolute",
        "right": -16,
        "top": -1,
      }
    }
    status="error"
    value={1}
  />
</View>
`;

exports[`withBadge HOC just value should render with just a value 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "justifyContent": "center",
      "position": "relative",
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.2}
  />
  <Themed.Badge
    containerStyle={
      Object {
        "bottom": undefined,
        "left": undefined,
        "position": "absolute",
        "right": -16,
        "top": -1,
      }
    }
    status="error"
    value={1}
  />
</View>
`;

exports[`withBadge HOC with options should not render when hidden is true 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "justifyContent": "center",
      "position": "relative",
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.2}
  />
</View>
`;

exports[`withBadge HOC with options should render without issue even with BadgeProps 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "justifyContent": "center",
      "position": "relative",
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.2}
  />
  <Themed.Badge
    containerStyle={
      Object {
        "bottom": 5,
        "left": undefined,
        "position": "absolute",
        "right": -16,
        "top": 0,
      }
    }
    status="success"
    top={0}
    value={1}
  />
</View>
`;
