{"version":3,"sources":["DataTablePagination.tsx"],"names":["DataTablePagination","props","label","page","numberOfPages","onPageChange","style","theme","rest","labelColor","colors","text","alpha","rgb","string","styles","container","color","size","I18nManager","isRTL","React","Component","displayName","StyleSheet","create","justifyContent","flexDirection","alignItems","paddingLeft","fontSize","marginRight"],"mappings":"86BAAA,oDACA,yCAOA,oDACA,iEACA,gEACA,2CAEA,uF,2HA0BMA,CAAAA,mB,gYAGK,iBASH,KAAKC,KATF,CAELC,KAFK,aAELA,KAFK,CAGLC,IAHK,aAGLA,IAHK,CAILC,aAJK,aAILA,aAJK,CAKLC,YALK,aAKLA,YALK,CAMLC,KANK,aAMLA,KANK,CAOLC,KAPK,aAOLA,KAPK,CAQFC,IARE,oHAUP,GAAMC,CAAAA,UAAU,CAAG,mBAAMF,KAAK,CAACG,MAAN,CAAaC,IAAnB,EAChBC,KADgB,CACV,GADU,EAEhBC,GAFgB,GAGhBC,MAHgB,EAAnB,CAKA,MACE,qBAAC,iBAAD,0BAAUN,IAAV,EAAgB,KAAK,CAAE,CAACO,MAAM,CAACC,SAAR,CAAmBV,KAAnB,CAAvB,kDACE,oBAAC,aAAD,EAAM,KAAK,CAAE,CAACS,MAAM,CAACb,KAAR,CAAe,CAAEe,KAAK,CAAER,UAAT,CAAf,CAAb,CAAoD,aAAa,CAAE,CAAnE,iDACGP,KADH,CADF,CAIE,oBAAC,mBAAD,EACE,IAAI,CAAE,uBAAGgB,CAAAA,IAAH,MAAGA,IAAH,CAASD,KAAT,MAASA,KAAT,OACJ,qBAAC,8BAAD,EACE,IAAI,CAAC,cADP,CAEE,KAAK,CAAEA,KAFT,CAGE,IAAI,CAAEC,IAHR,CAIE,SAAS,CAAEC,yBAAYC,KAAZ,CAAoB,KAApB,CAA4B,KAJzC,iDADI,EADR,CASE,KAAK,CAAEb,KAAK,CAACG,MAAN,CAAaC,IATtB,CAUE,QAAQ,CAAER,IAAI,GAAK,CAVrB,CAWE,OAAO,CAAE,yBAAME,CAAAA,YAAY,CAACF,IAAI,CAAG,CAAR,CAAlB,EAXX,iDAJF,CAiBE,oBAAC,mBAAD,EACE,IAAI,CAAE,wBAAGe,CAAAA,IAAH,OAAGA,IAAH,CAASD,KAAT,OAASA,KAAT,OACJ,qBAAC,8BAAD,EACE,IAAI,CAAC,eADP,CAEE,KAAK,CAAEA,KAFT,CAGE,IAAI,CAAEC,IAHR,CAIE,SAAS,CAAEC,yBAAYC,KAAZ,CAAoB,KAApB,CAA4B,KAJzC,iDADI,EADR,CASE,KAAK,CAAEb,KAAK,CAACG,MAAN,CAAaC,IATtB,CAUE,QAAQ,CAAER,IAAI,GAAKC,aAAa,CAAG,CAVrC,CAWE,OAAO,CAAE,yBAAMC,CAAAA,YAAY,CAACF,IAAI,CAAG,CAAR,CAAlB,EAXX,iDAjBF,CADF,CAiCD,C,iCAnD+BkB,KAAK,CAACC,S,kDAAlCtB,mB,CACGuB,W,CAAc,sB,CAqDvB,GAAMR,CAAAA,MAAM,CAAGS,wBAAWC,MAAX,CAAkB,CAC/BT,SAAS,CAAE,CACTU,cAAc,CAAE,UADP,CAETC,aAAa,CAAE,KAFN,CAGTC,UAAU,CAAE,QAHH,CAITC,WAAW,CAAE,EAJJ,CADoB,CAQ/B3B,KAAK,CAAE,CACL4B,QAAQ,CAAE,EADL,CAELC,WAAW,CAAE,EAFR,CARwB,CAAlB,CAAf,C,aAce,uBAAU/B,mBAAV,C","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Label text to display\n   */\n  label?: React.ReactNode;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nclass DataTablePagination extends React.Component<Props> {\n  static displayName = 'DataTable.Pagination';\n\n  render() {\n    const {\n      label,\n      page,\n      numberOfPages,\n      onPageChange,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const labelColor = color(theme.colors.text)\n      .alpha(0.6)\n      .rgb()\n      .string();\n\n    return (\n      <View {...rest} style={[styles.container, style]}>\n        <Text style={[styles.label, { color: labelColor }]} numberOfLines={1}>\n          {label}\n        </Text>\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"chevron-left\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={theme.colors.text}\n          disabled={page === 0}\n          onPress={() => onPageChange(page - 1)}\n        />\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"chevron-right\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={theme.colors.text}\n          disabled={page === numberOfPages - 1}\n          onPress={() => onPageChange(page + 1)}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n  },\n\n  label: {\n    fontSize: 12,\n    marginRight: 44,\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]}