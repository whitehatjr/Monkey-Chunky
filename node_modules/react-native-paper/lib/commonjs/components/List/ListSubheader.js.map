{"version":3,"sources":["ListSubheader.tsx"],"names":["ListSubheader","props","style","theme","rest","colors","fonts","font","medium","textColor","text","alpha","rgb","string","styles","container","color","React","Component","displayName","StyleSheet","create","paddingHorizontal","paddingVertical"],"mappings":"4+BAAA,oDACA,yCACA,oDACA,gEACA,2C,gHA+BMA,CAAAA,a,kWAGK,iBAC2B,KAAKC,KADhC,CACCC,KADD,aACCA,KADD,CACQC,KADR,aACQA,KADR,CACkBC,IADlB,yEAECC,CAAAA,MAFD,CAEmBF,KAFnB,CAECE,MAFD,CAESC,KAFT,CAEmBH,KAFnB,CAESG,KAFT,CAGP,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAACE,MAAnB,CACA,GAAMC,CAAAA,SAAS,CAAG,mBAAMJ,MAAM,CAACK,IAAb,EACfC,KADe,CACT,IADS,EAEfC,GAFe,GAGfC,MAHe,EAAlB,CAKA,MACE,qBAAC,aAAD,wBACE,aAAa,CAAE,CADjB,EAEMT,IAFN,EAGE,KAAK,CAAE,CAACU,MAAM,CAACC,SAAR,6BAAqBC,KAAK,CAAEP,SAA5B,EAA0CF,IAA1C,EAAkDL,KAAlD,CAHT,kDADF,CAOD,C,2BAnByBe,KAAK,CAACC,S,EAA5BlB,a,CACGmB,W,CAAc,gB,CAqBvB,GAAML,CAAAA,MAAM,CAAGM,wBAAWC,MAAX,CAAkB,CAC/BN,SAAS,CAAE,CACTO,iBAAiB,CAAE,EADV,CAETC,eAAe,CAAE,EAFR,CADoB,CAAlB,CAAf,C,aAOe,uBAAUvB,aAAV,C","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: StyleProp<TextStyle>;\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * class MyComponent extends React.Component {\n *  render () {\n *    return <List.Subheader>My List Title</List.Subheader>;\n *  }\n * }\n *\n * export default MyComponent;\n * ```\n */\nclass ListSubheader extends React.Component<Props> {\n  static displayName = 'List.Subheader';\n\n  render() {\n    const { style, theme, ...rest } = this.props;\n    const { colors, fonts } = theme;\n    const font = fonts.medium;\n    const textColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n\n    return (\n      <Text\n        numberOfLines={1}\n        {...rest}\n        style={[styles.container, { color: textColor, ...font }, style]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default withTheme(ListSubheader);\n"]}