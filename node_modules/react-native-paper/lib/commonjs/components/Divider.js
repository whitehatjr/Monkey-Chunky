var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var React=_interopRequireWildcard(require("react"));var _color=_interopRequireDefault(require("color"));var _reactNative=require("react-native");var _theming=require("../core/theming");var _colors=require("../styles/colors");var _jsxFileName="/Users/satya/Workspace/Callstack/react-native-paper/src/components/Divider.tsx";var Divider=function(_React$Component){(0,_inherits2.default)(Divider,_React$Component);function Divider(){(0,_classCallCheck2.default)(this,Divider);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(Divider).apply(this,arguments));}(0,_createClass2.default)(Divider,[{key:"render",value:function render(){var _this$props=this.props,inset=_this$props.inset,style=_this$props.style,theme=_this$props.theme,rest=(0,_objectWithoutProperties2.default)(_this$props,["inset","style","theme"]);var isDarkTheme=theme.dark;return React.createElement(_reactNative.View,(0,_extends2.default)({},rest,{style:[isDarkTheme?styles.dark:styles.light,inset&&styles.inset,style],__source:{fileName:_jsxFileName,lineNumber:46}}));}}]);return Divider;}(React.Component);var styles=_reactNative.StyleSheet.create({light:{backgroundColor:(0,_color.default)(_colors.black).alpha(0.12).rgb().string(),height:_reactNative.StyleSheet.hairlineWidth},dark:{backgroundColor:(0,_color.default)(_colors.white).alpha(0.12).rgb().string(),height:_reactNative.StyleSheet.hairlineWidth},inset:{marginLeft:72}});var _default=(0,_theming.withTheme)(Divider);exports.default=_default;
//# sourceMappingURL=Divider.js.map