{"version":3,"sources":["Surface.tsx"],"names":["Surface","props","style","theme","rest","flattenedStyles","StyleSheet","flatten","elevation","isDarkTheme","dark","mode","colors","backgroundColor","surface","React","Component"],"mappings":"k5BAAA,oDACA,yCACA,gEACA,wCAEA,kE,qGAyDMA,CAAAA,O,oUACK,iBAC2B,KAAKC,KADhC,CACCC,KADD,aACCA,KADD,CACQC,KADR,aACQA,KADR,CACkBC,IADlB,sEAEP,GAAMC,CAAAA,eAAe,CAAGC,wBAAWC,OAAX,CAAmBL,KAAnB,GAA6B,EAArD,CAFO,0BAG8BG,eAH9B,CAGCG,SAHD,CAGCA,SAHD,gCAGa,CAHb,0BAIOC,CAAAA,WAJP,CAIqCN,KAJrC,CAICO,IAJD,CAIoBC,IAJpB,CAIqCR,KAJrC,CAIoBQ,IAJpB,CAI0BC,MAJ1B,CAIqCT,KAJrC,CAI0BS,MAJ1B,CAKP,MACE,qBAAC,qBAAD,CAAU,IAAV,0BACMR,IADN,EAEE,KAAK,CAAE,CACL,CACES,eAAe,CACbJ,WAAW,EAAIE,IAAI,GAAK,UAAxB,CACI,qBAAQH,SAAR,CAAmBI,MAAM,CAACE,OAA1B,CADJ,CAEIF,MAAM,CAACE,OAJf,CADK,CAOLN,SAAS,EAAI,oBAAOA,SAAP,CAPR,CAQLN,KARK,CAFT,kDADF,CAeD,C,qBArBmBa,KAAK,CAACC,S,eAuBb,uBAAUhB,OAAV,C","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View, StyleProp, ViewStyle } from 'react-native';\nimport shadow from '../styles/shadow';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\nimport overlay from '../styles/overlay';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations.\n * Overlay and/or shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-1.png\" />\n *   <img src=\"screenshots/surface-2.png\" />\n *   <img src=\"screenshots/surface-3.png\" />\n * </div>\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-dark-1.png\" />\n *   <img src=\"screenshots/surface-dark-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *     elevation: 4,\n *   },\n * });\n * ```\n */\nclass Surface extends React.Component<Props> {\n  render() {\n    const { style, theme, ...rest } = this.props;\n    const flattenedStyles = StyleSheet.flatten(style) || {};\n    const { elevation = 4 }: ViewStyle = flattenedStyles;\n    const { dark: isDarkTheme, mode, colors } = theme;\n    return (\n      <Animated.View\n        {...rest}\n        style={[\n          {\n            backgroundColor:\n              isDarkTheme && mode === 'adaptive'\n                ? overlay(elevation, colors.surface)\n                : colors.surface,\n          },\n          elevation && shadow(elevation),\n          style,\n        ]}\n      />\n    );\n  }\n}\nexport default withTheme(Surface);\n"]}