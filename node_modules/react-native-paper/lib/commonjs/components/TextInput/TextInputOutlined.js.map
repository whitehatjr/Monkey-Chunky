{"version":3,"sources":["TextInputOutlined.tsx"],"names":["OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","props","disabled","editable","label","error","selectionColor","underlineColor","dense","style","theme","render","multiline","parentState","innerRef","onFocus","onBlur","onChangeText","onLayoutAnimatedText","rest","colors","fonts","font","regular","hasActiveOutline","focused","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","height","backgroundColor","background","viewStyle","MAXIMIZED_LABEL_FONT_SIZE","inputTextColor","activeColor","outlineColor","placeholderColor","containerStyle","text","alpha","rgb","string","primary","placeholder","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","labelProps","placeholderStyle","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","minHeight","paddingTop","paddingBottom","LabelBackground","ref","placeholderTextColor","underlineColorAndroid","input","color","textAlignVertical","React","Component","defaultProps","Outline","outline","borderRadius","roundness","borderWidth","borderColor","create","position","left","paddingHorizontal","right","top","bottom","flexGrow","margin","textAlign","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport { RenderProps, ChildTextInputProps } from './types';\nimport { Theme } from '../../types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n} from './helpers';\n\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nclass TextInputOutlined extends React.Component<ChildTextInputProps, {}> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      underlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      ...rest\n    } = this.props;\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      backgroundColor = colors.background,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    let inputTextColor,\n      activeColor,\n      outlineColor,\n      placeholderColor,\n      containerStyle;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = outlineColor = colors.disabled;\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = outlineColor = colors.placeholder;\n    }\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth -\n        (labelScale * labelWidth) / 2 -\n        (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n    const minInputHeight =\n      (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      LABEL_PADDING_TOP\n    );\n\n    if (height && typeof height !== 'number')\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: LABEL_PADDING_TOP,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputOutlinedDense : styles.inputOutlined\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = interpolatePlaceholder(\n      parentState.labeled,\n      hasActiveOutline\n    );\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      backgroundColor,\n    };\n\n    const minHeight = height || (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT);\n\n    return (\n      <View style={[containerStyle, viewStyle]}>\n        {/* \n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android \n          */}\n        <View>\n          <Outline\n            theme={theme}\n            hasActiveOutline={hasActiveOutline}\n            activeColor={activeColor}\n            outlineColor={outlineColor}\n            backgroundColor={backgroundColor}\n          />\n          <View\n            style={{\n              paddingTop: LABEL_PADDING_TOP,\n              paddingBottom: 0,\n              minHeight,\n            }}\n          >\n            <InputLabel\n              parentState={parentState}\n              labelProps={labelProps}\n              labelBackground={LabelBackground}\n            />\n\n            {render &&\n              render({\n                ...rest,\n                ref: innerRef,\n                onChangeText,\n                placeholder: label\n                  ? parentState.placeholder\n                  : this.props.placeholder,\n                placeholderTextColor: placeholderColor,\n                editable: !disabled && editable,\n                selectionColor:\n                  typeof selectionColor === 'undefined'\n                    ? activeColor\n                    : selectionColor,\n                onFocus,\n                onBlur,\n                underlineColorAndroid: 'transparent',\n                multiline,\n                style: [\n                  styles.input,\n                  !multiline || (multiline && height)\n                    ? { height: inputHeight }\n                    : {},\n                  paddingOut,\n                  {\n                    ...font,\n                    fontSize,\n                    fontWeight,\n                    color: inputTextColor,\n                    textAlignVertical: multiline ? 'top' : 'center',\n                  },\n                ],\n              } as RenderProps)}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default TextInputOutlined;\n\ntype OutlineType = {\n  activeColor: string;\n  hasActiveOutline: boolean | undefined;\n  outlineColor: string | undefined;\n  backgroundColor: string | undefined;\n  theme: Theme;\n};\n\nconst Outline = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  backgroundColor,\n}: OutlineType) => (\n  <View\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: theme.roundness,\n        borderWidth: hasActiveOutline ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]}