{"version":3,"sources":["helpers.tsx"],"names":["calculateLabelTopPosition","labelHeight","height","optionalPadding","customHeight","Math","floor","calculateInputHeight","minHeight","finalHeight","calculatePadding","props","multiline","result","calculateTextAreaPadding","calculateInputPadding","max","dense","topPosition","fontSize","scale","offset","isAndroid","refFontSize","min","adjustPaddingOut","pad","label","paddingTop","paddingBottom","adjustPaddingFlat","styles","topResult","bottomResult","interpolatePlaceholder","labeled","hasActiveOutline","interpolate","inputRange","outputRange"],"mappings":"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","sourcesContent":["import { Animated } from 'react-native';\n\ntype PaddingProps = {\n  height: number | null;\n  labelHalfHeight: number;\n  multiline: boolean | null;\n  dense: boolean | null;\n  topPosition: number;\n  fontSize: number;\n  label?: string | null;\n  scale: number;\n  offset: number;\n  isAndroid: boolean;\n  styles: { paddingTop: number; paddingBottom: number };\n};\n\ntype AdjProps = PaddingProps & {\n  pad: number;\n};\n\nexport type Padding = { paddingTop: number; paddingBottom: number };\n\nexport const calculateLabelTopPosition = (\n  labelHeight: number,\n  height: number = 0,\n  optionalPadding: number = 0\n): number => {\n  const customHeight = height > 0 ? height : 0;\n\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\n\nexport const calculateInputHeight = (\n  labelHeight: number,\n  height: any = 0,\n  minHeight: number\n): number => {\n  const finalHeight = height > 0 ? height : labelHeight;\n\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\n\nexport const calculatePadding = (props: PaddingProps): number => {\n  const { height, multiline = false } = props;\n\n  let result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nconst calculateTextAreaPadding = (props: PaddingProps) => {\n  const { dense } = props;\n\n  return dense ? 10 : 20;\n};\n\nconst calculateInputPadding = ({\n  topPosition,\n  fontSize,\n  multiline,\n  scale,\n  dense,\n  offset,\n  isAndroid,\n}: PaddingProps): number => {\n  const refFontSize = scale * fontSize;\n  let result = Math.floor(topPosition / 2);\n\n  result =\n    result +\n    Math.floor((refFontSize - fontSize) / 2) -\n    (scale < 1 ? offset / 2 : 0);\n\n  if (multiline && isAndroid)\n    result = Math.min(dense ? offset / 2 : offset, result);\n\n  return result;\n};\n\nexport const adjustPaddingOut = ({\n  pad,\n  multiline,\n  label,\n  scale,\n  height,\n  fontSize,\n  dense,\n  offset,\n  isAndroid,\n}: AdjProps): Padding => {\n  const refFontSize = scale * fontSize;\n  let result = pad;\n\n  if (height) {\n    return {\n      paddingTop: Math.max(0, (height - fontSize) / 2),\n      paddingBottom: Math.max(0, (height - fontSize) / 2),\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, (refFontSize / 2) * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result +=\n          scale < 1\n            ? Math.min(offset, refFontSize * scale)\n            : Math.min(offset / 2, refFontSize * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontSize * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return { paddingTop: result, paddingBottom: result };\n};\n\nexport const adjustPaddingFlat = ({\n  pad,\n  scale,\n  multiline,\n  label,\n  height,\n  offset,\n  dense,\n  fontSize,\n  isAndroid,\n  styles,\n}: AdjProps): Padding => {\n  let result = pad;\n  let topResult = result;\n  let bottomResult = result;\n  const { paddingTop, paddingBottom } = styles;\n  const refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    // do not modify padding if input is not multiline\n    if (label) {\n      // return const style for flat input with label\n      return { paddingTop, paddingBottom };\n    }\n    // return pad for flat input without label\n    return { paddingTop: result, paddingBottom: result };\n  }\n\n  if (label) {\n    // add paddings passed from styles\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    // adjust top padding for iOS\n    if (!isAndroid) {\n      if (dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(result, refFontSize * scale) - result / 2\n            : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(offset / 2, refFontSize * scale)\n            : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      // center text when height is passed\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2),\n      };\n    }\n    // adjust paddings for iOS if no label\n    if (!isAndroid) {\n      if (dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset / 2, (fontSize / 2) * scale)\n            : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset, fontSize * scale)\n            : Math.min(fontSize, (offset / 2) * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult),\n  };\n};\n\nexport const interpolatePlaceholder = (\n  labeled: Animated.Value,\n  hasActiveOutline: boolean | undefined\n) =>\n  labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1],\n  });\n"]}