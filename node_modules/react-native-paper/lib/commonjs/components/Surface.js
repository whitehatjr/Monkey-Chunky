var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _shadow=_interopRequireDefault(require("../styles/shadow"));var _theming=require("../core/theming");var _overlay=_interopRequireDefault(require("../styles/overlay"));var _jsxFileName="/Users/satya/Workspace/Callstack/react-native-paper/src/components/Surface.tsx";var Surface=function(_React$Component){(0,_inherits2.default)(Surface,_React$Component);function Surface(){(0,_classCallCheck2.default)(this,Surface);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(Surface).apply(this,arguments));}(0,_createClass2.default)(Surface,[{key:"render",value:function render(){var _this$props=this.props,style=_this$props.style,theme=_this$props.theme,rest=(0,_objectWithoutProperties2.default)(_this$props,["style","theme"]);var flattenedStyles=_reactNative.StyleSheet.flatten(style)||{};var _flattenedStyles$elev=flattenedStyles.elevation,elevation=_flattenedStyles$elev===void 0?4:_flattenedStyles$elev;var isDarkTheme=theme.dark,mode=theme.mode,colors=theme.colors;return React.createElement(_reactNative.Animated.View,(0,_extends2.default)({},rest,{style:[{backgroundColor:isDarkTheme&&mode==='adaptive'?(0,_overlay.default)(elevation,colors.surface):colors.surface},elevation&&(0,_shadow.default)(elevation),style],__source:{fileName:_jsxFileName,lineNumber:70}}));}}]);return Surface;}(React.Component);var _default=(0,_theming.withTheme)(Surface);exports.default=_default;
//# sourceMappingURL=Surface.js.map