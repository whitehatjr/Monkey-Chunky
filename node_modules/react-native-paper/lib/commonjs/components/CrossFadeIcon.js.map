{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["CrossFadeIcon","state","currentIcon","props","source","previousIcon","fade","Animated","Value","_","prevState","scale","theme","animation","setValue","timing","duration","toValue","start","color","size","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","styles","content","height","width","icon","opacity","transform","rotate","nextProps","nextState","React","Component","StyleSheet","create","alignItems","justifyContent","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, isEqualIcon, IconSource } from './Icon';\n\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  currentIcon: IconSource;\n  previousIcon: IconSource | null;\n  fade: Animated.Value;\n};\n\nclass CrossFadeIcon extends React.Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Props, nextState: State) {\n    if (nextState.currentIcon === nextProps.source) {\n      return null;\n    }\n\n    return {\n      currentIcon: nextProps.source,\n      previousIcon: nextState.currentIcon,\n    };\n  }\n\n  state: State = {\n    currentIcon: this.props.source,\n    previousIcon: null,\n    fade: new Animated.Value(1),\n  };\n\n  componentDidUpdate(_: Props, prevState: State) {\n    const { previousIcon } = this.state;\n    const {\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n\n    if (\n      !isValidIcon(previousIcon) ||\n      isEqualIcon(previousIcon, prevState.previousIcon)\n    ) {\n      return;\n    }\n\n    this.state.fade.setValue(1);\n\n    Animated.timing(this.state.fade, {\n      duration: scale * 200,\n      toValue: 0,\n    }).start();\n  }\n\n  render() {\n    const { color, size } = this.props;\n    const opacityPrev = this.state.fade;\n    const opacityNext = this.state.previousIcon\n      ? this.state.fade.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0],\n        })\n      : 1;\n\n    const rotatePrev = this.state.fade.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['-90deg', '0deg'],\n    });\n\n    const rotateNext = this.state.previousIcon\n      ? this.state.fade.interpolate({\n          inputRange: [0, 1],\n          outputRange: ['0deg', '-180deg'],\n        })\n      : '0deg';\n\n    return (\n      <View\n        style={[\n          styles.content,\n          {\n            height: size,\n            width: size,\n          },\n        ]}\n      >\n        {this.state.previousIcon ? (\n          <Animated.View\n            style={[\n              styles.icon,\n              {\n                opacity: opacityPrev,\n                transform: [{ rotate: rotatePrev }],\n              },\n            ]}\n          >\n            <Icon source={this.state.previousIcon} size={size} color={color} />\n          </Animated.View>\n        ) : null}\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityNext,\n              transform: [{ rotate: rotateNext }],\n            },\n          ]}\n        >\n          <Icon source={this.state.currentIcon} size={size} color={color} />\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]}