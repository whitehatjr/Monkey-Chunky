{"version":3,"sources":["Banner.tsx"],"names":["ELEVATION","DEFAULT_MAX_WIDTH","Banner","state","position","Animated","Value","props","visible","layout","height","measured","handleLayout","nativeEvent","setState","toggle","show","hide","timing","duration","toValue","start","prevProps","icon","children","actions","contentStyle","style","theme","rest","multiply","translateY","add","styles","container","wrapper","absolute","transform","opacity","content","message","map","i","label","others","button","React","Component","StyleSheet","create","elevation","overflow","alignSelf","width","maxWidth","top","flexDirection","justifyContent","marginHorizontal","marginTop","marginBottom","margin","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp, Animated } from 'react-native';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport Button from './Button';\nimport Icon, { IconSource } from './Icon';\nimport { withTheme } from '../core/theming';\nimport { Theme, $RemoveChildren } from '../types';\nimport shadow from '../styles/shadow';\n\nconst ELEVATION = 1;\nconst DEFAULT_MAX_WIDTH = 960;\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Whether banner is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Content that will be displayed inside banner.\n   */\n  children: string;\n  /**\n   * Icon to display for the `Banner`. Can be an image.\n   */\n  icon?: IconSource;\n  /**\n   * Action items to shown in the banner.\n   * An action item should contain the following properties:\n   *\n   * - `label`: label of the action button (required)\n   * - `onPress`: callback that is called when button is pressed (required)\n   *\n   * To customize button you can pass other props that button component takes.\n   */\n  actions: Array<{\n    label: string;\n    onPress: () => void;\n  }>;\n  /**\n   * Style of banner's inner content.\n   * Use this prop to apply custom width for wide layouts.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  position: Animated.Value;\n  layout: {\n    height: number;\n    measured: boolean;\n  };\n};\n\ntype NativeEvent = {\n  nativeEvent: {\n    layout: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n  };\n};\n\n/**\n * Banner displays a prominent message and related actions.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/banner.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Image } from 'react-native';\n * import { Banner } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: true,\n *   };\n *\n *   render() {\n *     return (\n *       <Banner\n *         visible={this.state.visible}\n *         actions={[\n *           {\n *             label: 'Fix it',\n *             onPress: () => this.setState({ visible: false }),\n *           },\n *           {\n *             label: 'Learn more',\n *             onPress: () => this.setState({ visible: false }),\n *           },\n *         ]}\n *         image={({ size }) =>\n *           <Image\n *             source={{ uri: 'https://avatars3.githubusercontent.com/u/17571969?s=400&v=4' }}\n *             style={{\n *               width: size,\n *               height: size,\n *             }}\n *           />\n *         }\n *       >\n *         There was a problem processing a transaction on your credit card.\n *       </Banner>\n *     );\n *   }\n * }\n * ```\n */\nclass Banner extends React.Component<Props, State> {\n  state = {\n    position: new Animated.Value(this.props.visible ? 1 : 0),\n    layout: {\n      height: 0,\n      measured: false,\n    },\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this.toggle();\n    }\n  }\n\n  private handleLayout = ({ nativeEvent }: NativeEvent) => {\n    const { height } = nativeEvent.layout;\n\n    this.setState({ layout: { height, measured: true } });\n  };\n\n  private toggle = () => {\n    if (this.props.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  private show = () => {\n    Animated.timing(this.state.position, {\n      duration: 250,\n      toValue: 1,\n    }).start();\n  };\n\n  private hide = () => {\n    Animated.timing(this.state.position, {\n      duration: 200,\n      toValue: 0,\n    }).start();\n  };\n\n  render() {\n    const {\n      visible,\n      icon,\n      children,\n      actions,\n      contentStyle,\n      style,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      theme,\n      ...rest\n    } = this.props;\n    const { position, layout } = this.state;\n\n    // The banner animation has 2 parts:\n    // 1. Blank spacer element which animates its height to move the content\n    // 2. Actual banner which animates its translateY\n    // In initial render, we position everything normally and measure the height of the banner\n    // Once we have the height, we apply the height to the spacer and switch the banner to position: absolute\n    // We need this because we need to move the content below as if banner's height was being animated\n    // However we can't animated banner's height directly as it'll also resize the content inside\n    const height = Animated.multiply(position, layout.height);\n\n    const translateY = Animated.multiply(\n      Animated.add(position, -1),\n      layout.height\n    );\n    return (\n      <Surface\n        {...rest}\n        style={[styles.container, shadow(ELEVATION) as ViewStyle, style]}\n      >\n        <View style={[styles.wrapper, contentStyle]}>\n          <Animated.View style={{ height }} />\n          <Animated.View\n            onLayout={this.handleLayout}\n            style={[\n              layout.measured || !visible\n                ? // If we have measured banner's height or it's invisible,\n                  // Position it absolutely, the layout will be taken care of the spacer\n                  [styles.absolute, { transform: [{ translateY }] }]\n                : // Otherwise position it normally\n                  null,\n              !layout.measured && !visible\n                ? // If we haven't measured banner's height yet and it's invisible,\n                  // hide it with opacity: 0 so user doesn't see it\n                  { opacity: 0 }\n                : null,\n            ]}\n          >\n            <View style={styles.content}>\n              {icon ? (\n                <View style={styles.icon}>\n                  {/*\n                  // @ts-ignore */}\n                  <Icon source={icon} size={40} />\n                </View>\n              ) : null}\n              <Text style={styles.message}>{children}</Text>\n            </View>\n            <View style={styles.actions}>\n              {actions.map(({ label, ...others }, i) => (\n                <Button\n                  key={/* eslint-disable-line react/no-array-index-key */ i}\n                  compact\n                  mode=\"text\"\n                  style={styles.button}\n                  {...others}\n                >\n                  {label}\n                </Button>\n              ))}\n            </View>\n          </Animated.View>\n        </View>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    elevation: ELEVATION,\n  },\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0,\n  },\n  icon: {\n    margin: 8,\n  },\n  message: {\n    flex: 1,\n    margin: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4,\n  },\n  button: {\n    margin: 4,\n  },\n});\n\nexport default withTheme(Banner);\n"]}