{"version":3,"sources":["AppbarBackAction.tsx"],"names":["AppbarBackAction","props","size","color","Platform","OS","styles","wrapper","width","height","transform","scaleX","I18nManager","isRTL","require","icon","tintColor","React","Component","displayName","defaultProps","accessibilityLabel","StyleSheet","create","alignItems","justifyContent","resizeMode"],"mappings":"kyBAAA,oDACA,yCAUA,oEACA,uF,qHAgCMA,CAAAA,gB,iXAOK,CACP,MACE,qBAAC,qBAAD,0BACM,KAAKC,KADX,EAEE,IAAI,CAAE,uBAAGC,CAAAA,IAAH,MAAGA,IAAH,CAASC,KAAT,MAASA,KAAT,OACJC,uBAASC,EAAT,GAAgB,KAAhB,CACE,oBAAC,iBAAD,EACE,KAAK,CAAE,CACLC,MAAM,CAACC,OADF,CAEL,CACEC,KAAK,CAAEN,IADT,CAEEO,MAAM,CAAEP,IAFV,CAGEQ,SAAS,CAAE,CAAC,CAAEC,MAAM,CAAEC,yBAAYC,KAAZ,CAAoB,CAAC,CAArB,CAAyB,CAAnC,CAAD,CAHb,CAFK,CADT,iDAUE,oBAAC,kBAAD,EACE,MAAM,CAAEC,OAAO,CAAC,+BAAD,CADjB,CAEE,KAAK,CAAE,CAACR,MAAM,CAACS,IAAR,CAAc,CAAEC,SAAS,CAAEb,KAAb,CAAd,CAFT,iDAVF,CADF,CAiBE,oBAAC,8BAAD,EACE,IAAI,CAAC,YADP,CAEE,KAAK,CAAEA,KAFT,CAGE,IAAI,CAAED,IAHR,CAIE,SAAS,CAAEU,yBAAYC,KAAZ,CAAoB,KAApB,CAA4B,KAJzC,iDAlBE,EAFR,kDADF,CA+BD,C,8BAvC4BI,KAAK,CAACC,S,EAA/BlB,gB,CACGmB,W,CAAc,mB,CADjBnB,gB,CAGGoB,Y,CAAe,CACpBC,kBAAkB,CAAE,MADA,C,CAuCxB,GAAMf,CAAAA,MAAM,CAAGgB,wBAAWC,MAAX,CAAkB,CAC/BhB,OAAO,CAAE,CACPiB,UAAU,CAAE,QADL,CAEPC,cAAc,CAAE,QAFT,CADsB,CAK/BV,IAAI,CAAE,CACJN,MAAM,CAAE,EADJ,CAEJD,KAAK,CAAE,EAFH,CAGJkB,UAAU,CAAE,SAHR,CALyB,CAAlB,CAAf,C,aAYe1B,gB","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Image,\n  I18nManager,\n  StyleSheet,\n  Platform,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport { $Omit } from './../../types';\nimport AppbarAction from './AppbarAction';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = $Omit<\n  React.ComponentProps<typeof AppbarAction> & {\n    /**\n     *  Custom color for back icon.\n     */\n    color?: string;\n    /**\n     * Optional icon size.\n     */\n    size?: number;\n    /**\n     * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n     */\n    disabled?: boolean;\n    /**\n     * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Function to execute on press.\n     */\n    onPress?: () => void;\n    style?: StyleProp<ViewStyle>;\n  },\n  'icon'\n>;\n\n/**\n * A component used to display a back button in the appbar.\n */\nclass AppbarBackAction extends React.Component<Props> {\n  static displayName = 'Appbar.BackAction';\n\n  static defaultProps = {\n    accessibilityLabel: 'Back',\n  };\n\n  render() {\n    return (\n      <AppbarAction\n        {...this.props}\n        icon={({ size, color }: { size: number; color: string }) =>\n          Platform.OS === 'ios' ? (\n            <View\n              style={[\n                styles.wrapper,\n                {\n                  width: size,\n                  height: size,\n                  transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n                },\n              ]}\n            >\n              <Image\n                source={require('../../assets/back-chevron.png')}\n                style={[styles.icon, { tintColor: color }]}\n              />\n            </View>\n          ) : (\n            <MaterialCommunityIcon\n              name=\"arrow-left\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )\n        }\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    height: 21,\n    width: 21,\n    resizeMode: 'contain',\n  },\n});\n\nexport default AppbarBackAction;\n"]}