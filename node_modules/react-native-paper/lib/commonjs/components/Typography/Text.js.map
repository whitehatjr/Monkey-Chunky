{"version":3,"sources":["Text.tsx"],"names":["Text","args","root","setNativeProps","props","style","theme","rest","c","fonts","regular","color","colors","text","textAlign","React","Component"],"mappings":"4+BAAA,oDACA,yCACA,2C,6GAkBMA,CAAAA,I,oUAMWC,I,CAAc,CAC3B,MAAO,MAAKC,IAAL,EAAa,KAAKA,IAAL,CAAUC,cAAV,CAAyBF,IAAzB,CAApB,CACD,C,uCAEQ,gCAC2B,KAAKG,KADhC,CACCC,KADD,aACCA,KADD,CACQC,KADR,aACQA,KADR,CACkBC,IADlB,sEAGP,MACE,qBAAC,iBAAD,0BACMA,IADN,EAEE,GAAG,CAAE,aAAAC,CAAC,CAAI,CACR,KAAI,CAACN,IAAL,CAAYM,CAAZ,CACD,CAJH,CAKE,KAAK,CAAE,+BAEAF,KAAK,CAACG,KAAN,CAAYC,OAFZ,EAGHC,KAAK,CAAEL,KAAK,CAACM,MAAN,CAAaC,IAHjB,CAIHC,SAAS,CAAE,MAJR,GAMLT,KANK,CALT,kDADF,CAgBD,C,kBA7BgBU,KAAK,CAACC,S,eAgCV,uBAAUhB,IAAV,C","sourcesContent":["import * as React from 'react';\nimport { Text as NativeText, TextStyle, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://facebook.github.io/react-native/docs/text.html#props\n */\nclass Text extends React.Component<Props> {\n  private root: NativeText | undefined | null;\n\n  /**\n   * @internal\n   */\n  setNativeProps(args: Object) {\n    return this.root && this.root.setNativeProps(args);\n  }\n\n  render() {\n    const { style, theme, ...rest } = this.props;\n\n    return (\n      <NativeText\n        {...rest}\n        ref={c => {\n          this.root = c;\n        }}\n        style={[\n          {\n            ...theme.fonts.regular,\n            color: theme.colors.text,\n            textAlign: 'left',\n          },\n          style,\n        ]}\n      />\n    );\n  }\n}\n\nexport default withTheme(Text);\n"]}