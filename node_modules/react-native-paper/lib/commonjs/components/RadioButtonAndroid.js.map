{"version":3,"sources":["RadioButtonAndroid.tsx"],"names":["BORDER_WIDTH","RadioButtonAndroid","state","borderAnim","Animated","Value","radioAnim","prevProps","status","props","setValue","timing","toValue","duration","start","disabled","onPress","theme","rest","checkedColor","color","colors","accent","uncheckedColor","text","alpha","dark","rgb","string","rippleColor","radioColor","checked","fade","undefined","value","styles","container","radio","borderColor","borderWidth","StyleSheet","absoluteFill","radioContainer","dot","backgroundColor","transform","scale","React","Component","displayName","create","borderRadius","alignItems","justifyContent","height","width","margin"],"mappings":"66BAAA,oDACA,yCACA,oDACA,0EACA,wC,6GAuCA,GAAMA,CAAAA,YAAY,CAAG,CAArB,C,GAiBMC,CAAAA,kB,keAGJC,K,CAAQ,CACNC,UAAU,CAAE,GAAIC,uBAASC,KAAb,CAAmBL,YAAnB,CADN,CAENM,SAAS,CAAE,GAAIF,uBAASC,KAAb,CAAmB,CAAnB,CAFL,C,yHAKWE,S,CAAkB,CACnC,GAAIA,SAAS,CAACC,MAAV,GAAqB,KAAKC,KAAL,CAAWD,MAApC,CAA4C,CAC1C,OACD,CAED,GAAI,KAAKC,KAAL,CAAWD,MAAX,GAAsB,SAA1B,CAAqC,CACnC,KAAKN,KAAL,CAAWI,SAAX,CAAqBI,QAArB,CAA8B,GAA9B,EAEAN,sBAASO,MAAT,CAAgB,KAAKT,KAAL,CAAWI,SAA3B,CAAsC,CACpCM,OAAO,CAAE,CAD2B,CAEpCC,QAAQ,CAAE,GAF0B,CAAtC,EAGGC,KAHH,GAID,CAPD,IAOO,CACL,KAAKZ,KAAL,CAAWC,UAAX,CAAsBO,QAAtB,CAA+B,EAA/B,EAEAN,sBAASO,MAAT,CAAgB,KAAKT,KAAL,CAAWC,UAA3B,CAAuC,CACrCS,OAAO,CAAEZ,YAD4B,CAErCa,QAAQ,CAAE,GAF2B,CAAvC,EAGGC,KAHH,GAID,CACF,C,uCAEQ,iCACuC,KAAKL,KAD5C,CACCM,QADD,aACCA,QADD,CACWC,OADX,aACWA,OADX,CACoBC,KADpB,aACoBA,KADpB,CAC8BC,IAD9B,mFAEP,GAAMC,CAAAA,YAAY,CAAG,KAAKV,KAAL,CAAWW,KAAX,EAAoBH,KAAK,CAACI,MAAN,CAAaC,MAAtD,CACA,GAAMC,CAAAA,cAAc,CAClB,KAAKd,KAAL,CAAWc,cAAX,EACA,mBAAMN,KAAK,CAACI,MAAN,CAAaG,IAAnB,EACGC,KADH,CACSR,KAAK,CAACS,IAAN,CAAa,GAAb,CAAmB,IAD5B,EAEGC,GAFH,GAGGC,MAHH,EAFF,CAOA,GAAIC,CAAAA,WAAJ,CAAiBC,UAAjB,CAEA,GAAMC,CAAAA,OAAO,CAAG,KAAKtB,KAAL,CAAWD,MAAX,GAAsB,SAAtC,CAEA,GAAIO,QAAJ,CAAc,CACZc,WAAW,CAAG,mBAAMZ,KAAK,CAACI,MAAN,CAAaG,IAAnB,EACXC,KADW,CACL,IADK,EAEXE,GAFW,GAGXC,MAHW,EAAd,CAIAE,UAAU,CAAGb,KAAK,CAACI,MAAN,CAAaN,QAA1B,CACD,CAND,IAMO,CACLc,WAAW,CAAG,mBAAMV,YAAN,EACXa,IADW,CACN,IADM,EAEXL,GAFW,GAGXC,MAHW,EAAd,CAIAE,UAAU,CAAGC,OAAO,CAAGZ,YAAH,CAAkBI,cAAtC,CACD,CAED,MACE,qBAAC,wBAAD,0BACML,IADN,EAEE,UAAU,KAFZ,CAGE,WAAW,CAAEW,WAHf,CAIE,OAAO,CACLd,QAAQ,CACJkB,SADI,CAEJ,UAAM,CACJjB,OAAO,EAAIA,OAAO,CAAC,MAAI,CAACP,KAAL,CAAWyB,KAAZ,CAAlB,CACD,CATT,CAWE,mBAAmB,CAAEnB,QAAQ,CAAG,CAAC,QAAD,CAAW,UAAX,CAAH,CAA4B,QAX3D,CAYE,0BAA0B,CACxBgB,OAAO,CAAG,qBAAH,CAA2B,uBAbtC,CAeE,iBAAiB,CAAC,QAfpB,CAgBE,mBAAmB,CAAEhB,QAAQ,CAAG,CAAC,UAAD,CAAH,CAAkB,EAhBjD,CAiBE,uBAAuB,CAAC,QAjB1B,CAkBE,KAAK,CAAEoB,MAAM,CAACC,SAlBhB,mDAoBE,oBAAC,qBAAD,CAAU,IAAV,EACE,KAAK,CAAE,CACLD,MAAM,CAACE,KADF,CAEL,CACEC,WAAW,CAAER,UADf,CAEES,WAAW,CAAE,KAAKrC,KAAL,CAAWC,UAF1B,CAFK,CADT,kDASG4B,OAAO,CACN,oBAAC,iBAAD,EAAM,KAAK,CAAE,CAACS,wBAAWC,YAAZ,CAA0BN,MAAM,CAACO,cAAjC,CAAb,kDACE,oBAAC,qBAAD,CAAU,IAAV,EACE,KAAK,CAAE,CACLP,MAAM,CAACQ,GADF,CAEL,CACEC,eAAe,CAAEd,UADnB,CAEEe,SAAS,CAAE,CAAC,CAAEC,KAAK,CAAE,KAAK5C,KAAL,CAAWI,SAApB,CAAD,CAFb,CAFK,CADT,kDADF,CADM,CAYJ,IArBN,CApBF,CADF,CA8CD,C,gCAxG8ByC,KAAK,CAACC,S,gDAAjC/C,kB,CACGgD,W,CAAc,qB,CA0GvB,GAAMd,CAAAA,MAAM,CAAGK,wBAAWU,MAAX,CAAkB,CAC/Bd,SAAS,CAAE,CACTe,YAAY,CAAE,EADL,CADoB,CAI/BT,cAAc,CAAE,CACdU,UAAU,CAAE,QADE,CAEdC,cAAc,CAAE,QAFF,CAJe,CAQ/BhB,KAAK,CAAE,CACLiB,MAAM,CAAE,EADH,CAELC,KAAK,CAAE,EAFF,CAGLJ,YAAY,CAAE,EAHT,CAILK,MAAM,CAAE,CAJH,CARwB,CAc/Bb,GAAG,CAAE,CACHW,MAAM,CAAE,EADL,CAEHC,KAAK,CAAE,EAFJ,CAGHJ,YAAY,CAAE,CAHX,CAd0B,CAAlB,CAAf,C,aAqBe,uBAAUlD,kBAAV,C","sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport color from 'color';\nimport TouchableRipple from './TouchableRipple';\nimport { withTheme } from '../core/theming';\nimport { Theme, $RemoveChildren } from '../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (param?: any) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  borderAnim: Animated.Value;\n  radioAnim: Animated.Value;\n};\n\nconst BORDER_WIDTH = 2;\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nclass RadioButtonAndroid extends React.Component<Props, State> {\n  static displayName = 'RadioButton.Android';\n\n  state = {\n    borderAnim: new Animated.Value(BORDER_WIDTH),\n    radioAnim: new Animated.Value(1),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.status === this.props.status) {\n      return;\n    }\n\n    if (this.props.status === 'checked') {\n      this.state.radioAnim.setValue(1.2);\n\n      Animated.timing(this.state.radioAnim, {\n        toValue: 1,\n        duration: 150,\n      }).start();\n    } else {\n      this.state.borderAnim.setValue(10);\n\n      Animated.timing(this.state.borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150,\n      }).start();\n    }\n  }\n\n  render() {\n    const { disabled, onPress, theme, ...rest } = this.props;\n    const checkedColor = this.props.color || theme.colors.accent;\n    const uncheckedColor =\n      this.props.uncheckedColor ||\n      color(theme.colors.text)\n        .alpha(theme.dark ? 0.7 : 0.54)\n        .rgb()\n        .string();\n\n    let rippleColor, radioColor;\n\n    const checked = this.props.status === 'checked';\n\n    if (disabled) {\n      rippleColor = color(theme.colors.text)\n        .alpha(0.16)\n        .rgb()\n        .string();\n      radioColor = theme.colors.disabled;\n    } else {\n      rippleColor = color(checkedColor)\n        .fade(0.32)\n        .rgb()\n        .string();\n      radioColor = checked ? checkedColor : uncheckedColor;\n    }\n\n    return (\n      <TouchableRipple\n        {...rest}\n        borderless\n        rippleColor={rippleColor}\n        onPress={\n          disabled\n            ? undefined\n            : () => {\n                onPress && onPress(this.props.value);\n              }\n        }\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n        accessibilityComponentType={\n          checked ? 'radiobutton_checked' : 'radiobutton_unchecked'\n        }\n        accessibilityRole=\"button\"\n        accessibilityStates={disabled ? ['disabled'] : []}\n        accessibilityLiveRegion=\"polite\"\n        style={styles.container}\n      >\n        <Animated.View\n          style={[\n            styles.radio,\n            {\n              borderColor: radioColor,\n              borderWidth: this.state.borderAnim,\n            },\n          ]}\n        >\n          {checked ? (\n            <View style={[StyleSheet.absoluteFill, styles.radioContainer]}>\n              <Animated.View\n                style={[\n                  styles.dot,\n                  {\n                    backgroundColor: radioColor,\n                    transform: [{ scale: this.state.radioAnim }],\n                  },\n                ]}\n              />\n            </View>\n          ) : null}\n        </Animated.View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8,\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n  },\n});\n\nexport default withTheme(RadioButtonAndroid);\n\n// @component-docs ignore-next-line\nexport { RadioButtonAndroid };\n"]}