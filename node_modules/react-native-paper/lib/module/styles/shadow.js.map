{"version":3,"sources":["shadow.tsx"],"names":["Colors","Animated","SHADOW_COLOR","black","SHADOW_OPACITY","shadow","elevation","Value","inputRange","shadowColor","shadowOffset","width","height","interpolate","outputRange","shadowOpacity","shadowRadius","radius"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,MAAZ,KAAwB,UAAxB,CACA,OAASC,QAAT,KAAyB,cAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAGF,MAAM,CAACG,KAA5B,CACA,GAAMC,CAAAA,cAAc,CAAG,IAAvB,CAEA,cAAe,SAASC,CAAAA,MAAT,EAAwD,IAAxCC,CAAAA,SAAwC,2DAAH,CAAG,CACrE,GAAIA,SAAS,WAAYL,CAAAA,QAAQ,CAACM,KAAlC,CAAyC,CACvC,GAAMC,CAAAA,UAAU,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,EAAhB,CAAnB,CAEA,MAAO,CACLC,WAAW,CAAEP,YADR,CAELQ,YAAY,CAAE,CACZC,KAAK,CAAE,GAAIV,CAAAA,QAAQ,CAACM,KAAb,CAAmB,CAAnB,CADK,CAEZK,MAAM,CAAEN,SAAS,CAACO,WAAV,CAAsB,CAC5BL,UAAU,CAAVA,UAD4B,CAE5BM,WAAW,CAAE,CAAC,CAAD,CAAI,GAAJ,CAAS,IAAT,CAAe,CAAf,CAAkB,CAAlB,CAAqB,EAArB,CAFe,CAAtB,CAFI,CAFT,CASLC,aAAa,CAAE,GAAId,CAAAA,QAAQ,CAACM,KAAb,CAAmBH,cAAnB,CATV,CAULY,YAAY,CAAEV,SAAS,CAACO,WAAV,CAAsB,CAClCL,UAAU,CAAVA,UADkC,CAElCM,WAAW,CAAE,CAAC,CAAD,CAAI,IAAJ,CAAU,GAAV,CAAe,CAAf,CAAkB,CAAlB,CAAqB,EAArB,CAFqB,CAAtB,CAVT,CAAP,CAeD,CAlBD,IAkBO,CACL,GAAIR,SAAS,GAAK,CAAlB,CAAqB,CACnB,MAAO,EAAP,CACD,CAED,GAAIM,CAAAA,MAAJ,CAAYK,MAAZ,CACA,OAAQX,SAAR,EACE,IAAK,EAAL,CACEM,MAAM,CAAG,GAAT,CACAK,MAAM,CAAG,IAAT,CACA,MACF,IAAK,EAAL,CACEL,MAAM,CAAG,IAAT,CACAK,MAAM,CAAG,GAAT,CACA,MACF,QACEL,MAAM,CAAGN,SAAS,CAAG,CAArB,CACAW,MAAM,CAAGX,SAAT,CAXJ,CAcA,MAAO,CACLG,WAAW,CAAEP,YADR,CAELQ,YAAY,CAAE,CACZC,KAAK,CAAE,CADK,CAEZC,MAAM,CAANA,MAFY,CAFT,CAMLG,aAAa,CAAEX,cANV,CAOLY,YAAY,CAAEC,MAPT,CAAP,CASD,CACF","sourcesContent":["import * as Colors from './colors';\nimport { Animated } from 'react-native';\n\nconst SHADOW_COLOR = Colors.black;\nconst SHADOW_OPACITY = 0.24;\n\nexport default function shadow(elevation: number | Animated.Value = 0) {\n  if (elevation instanceof Animated.Value) {\n    const inputRange = [0, 1, 2, 3, 8, 24];\n\n    return {\n      shadowColor: SHADOW_COLOR,\n      shadowOffset: {\n        width: new Animated.Value(0),\n        height: elevation.interpolate({\n          inputRange,\n          outputRange: [0, 0.5, 0.75, 2, 7, 23],\n        }),\n      },\n      shadowOpacity: new Animated.Value(SHADOW_OPACITY),\n      shadowRadius: elevation.interpolate({\n        inputRange,\n        outputRange: [0, 0.75, 1.5, 3, 8, 24],\n      }),\n    };\n  } else {\n    if (elevation === 0) {\n      return {};\n    }\n\n    let height, radius;\n    switch (elevation) {\n      case 1:\n        height = 0.5;\n        radius = 0.75;\n        break;\n      case 2:\n        height = 0.75;\n        radius = 1.5;\n        break;\n      default:\n        height = elevation - 1;\n        radius = elevation;\n    }\n\n    return {\n      shadowColor: SHADOW_COLOR,\n      shadowOffset: {\n        width: 0,\n        height,\n      },\n      shadowOpacity: SHADOW_OPACITY,\n      shadowRadius: radius,\n    };\n  }\n}\n"]}