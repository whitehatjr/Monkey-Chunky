{"version":3,"sources":["MaterialCommunityIcon.tsx"],"names":["React","StyleSheet","Text","Platform","MaterialCommunityIcons","require","default","e","global","__expo","Icon","isErrorLogged","name","color","size","rest","test","message","console","error","warn","styles","icon","fontSize","accessibilityProps","OS","role","focusable","accessibilityElementsHidden","importantForAccessibility","defaultIcon","direction","transform","scaleX","create","backgroundColor"],"mappings":"0PAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,QAA3B,KAA2C,cAA3C,CASA,GAAIC,CAAAA,sBAAJ,CAEA,GAAI,CAEFA,sBAAsB,CAAGC,OAAO,CAAC,kDAAD,CAAP,CACtBC,OADH,CAED,CAAC,MAAOC,CAAP,CAAU,CACV,GAEEC,MAAM,CAACC,MAAP,EAEAD,MAAM,CAACC,MAAP,CAAcC,IAFd,EAIAF,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBN,sBANrB,CAOE,CAIAA,sBAAsB,CAAGI,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBN,sBAA5C,CACD,CAZD,IAYO,CACL,GAAIO,CAAAA,aAAa,CAAG,KAApB,CAIAP,sBAAsB,CAAG,qCAAoC,IAAjCQ,CAAAA,IAAiC,MAAjCA,IAAiC,CAA3BC,KAA2B,MAA3BA,KAA2B,CAApBC,IAAoB,MAApBA,IAAoB,CAAXC,IAAW,wDAE3D,GAAI,CAACJ,aAAL,CAAoB,CAClB,GACE,CAAC,8DAA8DK,IAA9D,CACCT,CAAC,CAACU,OADH,CADH,CAIE,CACAC,OAAO,CAACC,KAAR,CAAcZ,CAAd,EACD,CAEDW,OAAO,CAACE,IAAR,2BAC4BR,IAD5B,4QAKAD,aAAa,CAAG,IAAhB,CACD,CAED,MACE,qBAAC,IAAD,aACMI,IADN,EAEE,KAAK,CAAE,CAACM,MAAM,CAACC,IAAR,CAAc,CAAET,KAAK,CAALA,KAAF,CAASU,QAAQ,CAAET,IAAnB,CAAd,CAFT,CAGE,aAAa,CAAC,MAHhB,2DADF,CASD,CA5BD,CA6BD,CACF,CAED,MAAO,IAAMU,CAAAA,kBAAkB,CAC7BrB,QAAQ,CAACsB,EAAT,GAAgB,KAAhB,CACI,CACEC,IAAI,CAAE,KADR,CAEEC,SAAS,CAAE,KAFb,CADJ,CAKI,CACEC,2BAA2B,CAAE,IAD/B,CAEEC,yBAAyB,CAAE,qBAF7B,CANC,CAWP,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,WAAGlB,CAAAA,IAAH,OAAGA,IAAH,CAASC,KAAT,OAASA,KAAT,CAAgBC,IAAhB,OAAgBA,IAAhB,CAAsBiB,SAAtB,OAAsBA,SAAtB,OAClB,qBAAC,sBAAD,WACE,IAAI,CAAEnB,IADR,CAEE,KAAK,CAAEC,KAFT,CAGE,IAAI,CAAEC,IAHR,CAIE,KAAK,CAAE,CACL,CACEkB,SAAS,CAAE,CAAC,CAAEC,MAAM,CAAEF,SAAS,GAAK,KAAd,CAAsB,CAAC,CAAvB,CAA2B,CAArC,CAAD,CADb,CADK,CAILV,MAAM,CAACC,IAJF,CAJT,CAUE,aAAa,CAAC,MAVhB,EAWME,kBAXN,mDADkB,EAApB,CAgBA,GAAMH,CAAAA,MAAM,CAAGpB,UAAU,CAACiC,MAAX,CAAkB,CAC/BZ,IAAI,CAAE,CACJa,eAAe,CAAE,aADb,CADyB,CAAlB,CAAf,CAMA,cAAeL,CAAAA,WAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Platform } from 'react-native';\n\nexport type IconProps = {\n  name: string;\n  color: string;\n  size: number;\n  direction: 'rtl' | 'ltr';\n};\n\nlet MaterialCommunityIcons: any;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons')\n    .default;\n} catch (e) {\n  if (\n    // @ts-ignore\n    global.__expo &&\n    // @ts-ignore\n    global.__expo.Icon &&\n    // @ts-ignore\n    global.__expo.Icon.MaterialCommunityIcons\n  ) {\n    // Snack doesn't properly bundle vector icons from subpath\n    // Use icons from the __expo global if available\n    // @ts-ignore\n    MaterialCommunityIcons = global.__expo.Icon.MaterialCommunityIcons;\n  } else {\n    let isErrorLogged = false;\n\n    // Fallback component for icons\n    // @ts-ignore\n    MaterialCommunityIcons = ({ name, color, size, ...rest }) => {\n      /* eslint-disable no-console */\n      if (!isErrorLogged) {\n        if (\n          !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n            e.message\n          )\n        ) {\n          console.error(e);\n        }\n\n        console.warn(\n          `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons' could not be loaded.`,\n          `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n        );\n\n        isErrorLogged = true;\n      }\n\n      return (\n        <Text\n          {...rest}\n          style={[styles.icon, { color, fontSize: size }]}\n          pointerEvents=\"none\"\n        >\n          â–¡\n        </Text>\n      );\n    };\n  }\n}\n\nexport const accessibilityProps =\n  Platform.OS === 'web'\n    ? {\n        role: 'img',\n        focusable: false,\n      }\n    : {\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants' as 'no-hide-descendants',\n      };\n\nconst defaultIcon = ({ name, color, size, direction }: IconProps) => (\n  <MaterialCommunityIcons\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n      },\n      styles.icon,\n    ]}\n    pointerEvents=\"none\"\n    {...accessibilityProps}\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n"]}