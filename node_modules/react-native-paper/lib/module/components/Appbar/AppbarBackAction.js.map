{"version":3,"sources":["AppbarBackAction.tsx"],"names":["React","View","Image","I18nManager","StyleSheet","Platform","AppbarAction","MaterialCommunityIcon","AppbarBackAction","props","size","color","OS","styles","wrapper","width","height","transform","scaleX","isRTL","require","icon","tintColor","Component","displayName","defaultProps","accessibilityLabel","create","alignItems","justifyContent","resizeMode"],"mappings":"0fAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OACEC,IADF,CAEEC,KAFF,CAGEC,WAHF,CAIEC,UAJF,CAKEC,QALF,KAQO,cARP,CAUA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,0BAAlC,C,GAgCMC,CAAAA,gB,iTAOK,CACP,MACE,qBAAC,YAAD,aACM,KAAKC,KADX,EAEE,IAAI,CAAE,uBAAGC,CAAAA,IAAH,MAAGA,IAAH,CAASC,KAAT,MAASA,KAAT,OACJN,CAAAA,QAAQ,CAACO,EAAT,GAAgB,KAAhB,CACE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLC,MAAM,CAACC,OADF,CAEL,CACEC,KAAK,CAAEL,IADT,CAEEM,MAAM,CAAEN,IAFV,CAGEO,SAAS,CAAE,CAAC,CAAEC,MAAM,CAAEf,WAAW,CAACgB,KAAZ,CAAoB,CAAC,CAArB,CAAyB,CAAnC,CAAD,CAHb,CAFK,CADT,iDAUE,oBAAC,KAAD,EACE,MAAM,CAAEC,OAAO,CAAC,+BAAD,CADjB,CAEE,KAAK,CAAE,CAACP,MAAM,CAACQ,IAAR,CAAc,CAAEC,SAAS,CAAEX,KAAb,CAAd,CAFT,iDAVF,CADF,CAiBE,oBAAC,qBAAD,EACE,IAAI,CAAC,YADP,CAEE,KAAK,CAAEA,KAFT,CAGE,IAAI,CAAED,IAHR,CAIE,SAAS,CAAEP,WAAW,CAACgB,KAAZ,CAAoB,KAApB,CAA4B,KAJzC,iDAlBE,EAFR,kDADF,CA+BD,C,8BAvC4BnB,KAAK,CAACuB,S,EAA/Bf,gB,CACGgB,W,CAAc,mB,CADjBhB,gB,CAGGiB,Y,CAAe,CACpBC,kBAAkB,CAAE,MADA,C,CAuCxB,GAAMb,CAAAA,MAAM,CAAGT,UAAU,CAACuB,MAAX,CAAkB,CAC/Bb,OAAO,CAAE,CACPc,UAAU,CAAE,QADL,CAEPC,cAAc,CAAE,QAFT,CADsB,CAK/BR,IAAI,CAAE,CACJL,MAAM,CAAE,EADJ,CAEJD,KAAK,CAAE,EAFH,CAGJe,UAAU,CAAE,SAHR,CALyB,CAAlB,CAAf,CAYA,cAAetB,CAAAA,gBAAf","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Image,\n  I18nManager,\n  StyleSheet,\n  Platform,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport { $Omit } from './../../types';\nimport AppbarAction from './AppbarAction';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = $Omit<\n  React.ComponentProps<typeof AppbarAction> & {\n    /**\n     *  Custom color for back icon.\n     */\n    color?: string;\n    /**\n     * Optional icon size.\n     */\n    size?: number;\n    /**\n     * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n     */\n    disabled?: boolean;\n    /**\n     * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Function to execute on press.\n     */\n    onPress?: () => void;\n    style?: StyleProp<ViewStyle>;\n  },\n  'icon'\n>;\n\n/**\n * A component used to display a back button in the appbar.\n */\nclass AppbarBackAction extends React.Component<Props> {\n  static displayName = 'Appbar.BackAction';\n\n  static defaultProps = {\n    accessibilityLabel: 'Back',\n  };\n\n  render() {\n    return (\n      <AppbarAction\n        {...this.props}\n        icon={({ size, color }: { size: number; color: string }) =>\n          Platform.OS === 'ios' ? (\n            <View\n              style={[\n                styles.wrapper,\n                {\n                  width: size,\n                  height: size,\n                  transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n                },\n              ]}\n            >\n              <Image\n                source={require('../../assets/back-chevron.png')}\n                style={[styles.icon, { tintColor: color }]}\n              />\n            </View>\n          ) : (\n            <MaterialCommunityIcon\n              name=\"arrow-left\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )\n        }\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    height: 21,\n    width: 21,\n    resizeMode: 'contain',\n  },\n});\n\nexport default AppbarBackAction;\n"]}