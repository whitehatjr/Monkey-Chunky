{"version":3,"sources":["AppbarContent.tsx"],"names":["React","Platform","StyleSheet","TouchableWithoutFeedback","View","color","Text","withTheme","white","AppbarContent","props","titleColor","subtitle","subtitleStyle","onPress","style","titleStyle","theme","title","rest","fonts","subtitleColor","alpha","rgb","string","styles","container","OS","regular","medium","Component","displayName","create","flex","paddingHorizontal","fontSize"],"mappings":"2oBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OACEC,QADF,CAGEC,UAHF,CAKEC,wBALF,CAMEC,IANF,KAQO,cARP,CASA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CAEA,OAASC,SAAT,KAA0B,oBAA1B,CACA,OAASC,KAAT,KAAsB,qBAAtB,C,GAuCMC,CAAAA,a,kSAGK,iBAWH,KAAKC,KAXF,+BAELL,KAFK,CAEEM,UAFF,4BAEeH,KAFf,mBAGLI,QAHK,aAGLA,QAHK,CAILC,aAJK,aAILA,aAJK,CAKLC,OALK,aAKLA,OALK,CAMLC,KANK,aAMLA,KANK,CAOLC,UAPK,aAOLA,UAPK,CAQLC,KARK,aAQLA,KARK,CASLC,KATK,aASLA,KATK,CAUFC,IAVE,8HAYCC,CAAAA,KAZD,CAYWH,KAZX,CAYCG,KAZD,CAcP,GAAMC,CAAAA,aAAa,CAAGhB,KAAK,CAACM,UAAD,CAAL,CACnBW,KADmB,CACb,GADa,EAEnBC,GAFmB,GAGnBC,MAHmB,EAAtB,CAKA,MACE,qBAAC,wBAAD,EAA0B,OAAO,CAAEV,OAAnC,iDACE,oBAAC,IAAD,WAAM,KAAK,CAAE,CAACW,MAAM,CAACC,SAAR,CAAmBX,KAAnB,CAAb,EAA4CI,IAA5C,mDACE,oBAAC,IAAD,EACE,KAAK,CAAE,gBAEHd,KAAK,CAAEM,UAFJ,EAGCV,QAAQ,CAAC0B,EAAT,GAAgB,KAAhB,CAAwBP,KAAK,CAACQ,OAA9B,CAAwCR,KAAK,CAACS,MAH/C,EAKLJ,MAAM,CAACP,KALF,CAMLF,UANK,CADT,CASE,aAAa,CAAE,CATjB,CAUE,mBAAmB,CAAC,QAVtB,CAYE,iBAAiB,CAAEf,QAAQ,CAAC0B,EAAT,GAAgB,KAAhB,CAAwB,SAAxB,CAAoC,QAZzD,iDAcGT,KAdH,CADF,CAiBGN,QAAQ,CACP,oBAAC,IAAD,EACE,KAAK,CAAE,CAACa,MAAM,CAACb,QAAR,CAAkB,CAAEP,KAAK,CAAEgB,aAAT,CAAlB,CAA4CR,aAA5C,CADT,CAEE,aAAa,CAAE,CAFjB,iDAIGD,QAJH,CADO,CAOL,IAxBN,CADF,CADF,CA8BD,C,2BApDyBZ,KAAK,CAAC8B,S,EAA5BrB,a,CACGsB,W,CAAc,gB,CAsDvB,GAAMN,CAAAA,MAAM,CAAGvB,UAAU,CAAC8B,MAAX,CAAkB,CAC/BN,SAAS,CAAE,CACTO,IAAI,CAAE,CADG,CAETC,iBAAiB,CAAE,EAFV,CADoB,CAK/BhB,KAAK,CAAE,CACLiB,QAAQ,CAAElC,QAAQ,CAAC0B,EAAT,GAAgB,KAAhB,CAAwB,EAAxB,CAA6B,EADlC,CALwB,CAQ/Bf,QAAQ,CAAE,CACRuB,QAAQ,CAAElC,QAAQ,CAAC0B,EAAT,GAAgB,KAAhB,CAAwB,EAAxB,CAA6B,EAD/B,CARqB,CAAlB,CAAf,CAaA,cAAepB,CAAAA,SAAS,CAACE,aAAD,CAAxB,CAGA,OAASA,aAAT","sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\nimport { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component used to display a title and optional subtitle in a appbar.\n */\nclass AppbarContent extends React.Component<Props> {\n  static displayName = 'Appbar.Content';\n\n  render() {\n    const {\n      color: titleColor = white,\n      subtitle,\n      subtitleStyle,\n      onPress,\n      style,\n      titleStyle,\n      theme,\n      title,\n      ...rest\n    } = this.props;\n    const { fonts } = theme;\n\n    const subtitleColor = color(titleColor)\n      .alpha(0.7)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableWithoutFeedback onPress={onPress}>\n        <View style={[styles.container, style]} {...rest}>\n          <Text\n            style={[\n              {\n                color: titleColor,\n                ...(Platform.OS === 'ios' ? fonts.regular : fonts.medium),\n              },\n              styles.title,\n              titleStyle,\n            ]}\n            numberOfLines={1}\n            accessibilityTraits=\"header\"\n            // @ts-ignore\n            accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n          >\n            {title}\n          </Text>\n          {subtitle ? (\n            <Text\n              style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n              numberOfLines={1}\n            >\n              {subtitle}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nexport { AppbarContent };\n"]}