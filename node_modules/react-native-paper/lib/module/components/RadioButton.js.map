{"version":3,"sources":["RadioButton.tsx"],"names":["React","Platform","RadioButtonGroup","RadioButtonContext","RadioButtonAndroid","RadioButtonIOS","withTheme","RadioButton","handlePress","context","onPress","props","onValueChange","value","isChecked","Button","select","default","ios","status","Component","Group","Android","IOS"],"mappings":"8eAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,QAAT,KAAyB,cAAzB,CACA,MAAOC,CAAAA,gBAAP,EACEC,kBADF,KAGO,oBAHP,CAIA,MAAOC,CAAAA,kBAAP,KAGO,sBAHP,CAIA,MAAOC,CAAAA,cAAP,KAGO,kBAHP,CAIA,OAASC,SAAT,KAA0B,iBAA1B,C,GAwFMC,CAAAA,W,kZAUJC,W,CAAc,SAACC,OAAD,CAAqC,IACzCC,CAAAA,OADyC,CAC7B,MAAKC,KADwB,CACzCD,OADyC,CAEjD,GAAME,CAAAA,aAAa,CAAGH,OAAO,CAAGA,OAAO,CAACG,aAAX,CAA2B,UAAM,CAAE,CAAhE,CAEAF,OAAO,CAAGA,OAAO,EAAV,CAAeE,aAAa,CAAC,MAAKD,KAAL,CAAWE,KAAZ,CAAnC,CACD,C,OAEDC,S,CAAY,SAACL,OAAD,QACVA,CAAAA,OAAO,CAACI,KAAR,GAAkB,MAAKF,KAAL,CAAWE,KAA7B,CAAqC,SAArC,CAAiD,WADvC,E,8EAGH,iBACP,GAAME,CAAAA,MAAM,CAAGd,QAAQ,CAACe,MAAT,CAAgB,CAC7BC,OAAO,CAAEb,kBADoB,CAE7Bc,GAAG,CAAEb,cAFwB,CAAhB,CAAf,CAKA,MACE,qBAAC,kBAAD,CAAoB,QAApB,mDACG,SAAAI,OAAO,QACN,qBAAC,MAAD,aACM,MAAI,CAACE,KADX,EAEE,MAAM,CAAE,MAAI,CAACA,KAAL,CAAWQ,MAAX,EAAsBV,OAAO,EAAI,MAAI,CAACK,SAAL,CAAeL,OAAf,CAF3C,CAGE,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACD,WAAL,CAAiBC,OAAjB,CAAN,EAHX,mDADM,EADV,CADF,CAWD,C,yBArCuBT,KAAK,CAACoB,S,EAA1Bb,W,CAEGc,K,CAAQnB,gB,CAFXK,W,CAKGe,O,CAAUlB,kB,CALbG,W,CAQGgB,G,CAAMlB,c,CAgCf,cAAeC,CAAAA,SAAS,CAACC,WAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport RadioButtonGroup, {\n  RadioButtonContext,\n  RadioButtonContextType,\n} from './RadioButtonGroup';\nimport RadioButtonAndroid, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  RadioButtonAndroid as _RadioButtonAndroid,\n} from './RadioButtonAndroid';\nimport RadioButtonIOS, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  RadioButtonIOS as _RadioButtonIOS,\n} from './RadioButtonIOS';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: 'first',\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *\n *     return (\n *       <View>\n *         <RadioButton\n *           value=\"first\"\n *           status={checked === 'first' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'first' }); }}\n *         />\n *         <RadioButton\n *           value=\"second\"\n *           status={checked === 'second' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'second' }); }}\n *         />\n *       </View>\n *     );\n *   }\n * }\n * ```\n */\nclass RadioButton extends React.Component<Props> {\n  // @component ./RadioButtonGroup.tsx\n  static Group = RadioButtonGroup;\n\n  // @component ./RadioButtonAndroid.tsx\n  static Android = RadioButtonAndroid;\n\n  // @component ./RadioButtonIOS.tsx\n  static IOS = RadioButtonIOS;\n\n  handlePress = (context: RadioButtonContextType) => {\n    const { onPress } = this.props;\n    const onValueChange = context ? context.onValueChange : () => {};\n\n    onPress ? onPress() : onValueChange(this.props.value);\n  };\n\n  isChecked = (context: RadioButtonContextType) =>\n    context.value === this.props.value ? 'checked' : 'unchecked';\n\n  render() {\n    const Button = Platform.select({\n      default: RadioButtonAndroid,\n      ios: RadioButtonIOS,\n    });\n\n    return (\n      <RadioButtonContext.Consumer>\n        {context => (\n          <Button\n            {...this.props}\n            status={this.props.status || (context && this.isChecked(context))}\n            onPress={() => this.handlePress(context)}\n          />\n        )}\n      </RadioButtonContext.Consumer>\n    );\n  }\n}\n\nexport default withTheme(RadioButton);\n"]}