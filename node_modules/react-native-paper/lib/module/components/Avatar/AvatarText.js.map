{"version":3,"sources":["AvatarText.tsx"],"names":["React","View","StyleSheet","color","Text","withTheme","white","defaultSize","AvatarText","props","label","size","style","theme","labelStyle","flatten","backgroundColor","colors","primary","restStyle","textColor","isLight","width","height","borderRadius","styles","container","text","fontSize","lineHeight","Component","displayName","defaultProps","create","justifyContent","alignItems","textAlign","textAlignVertical"],"mappings":"ohBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OACEC,IADF,CAGEC,UAHF,KAMO,cANP,CAOA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,OAASC,SAAT,KAA0B,oBAA1B,CACA,OAASC,KAAT,KAAsB,qBAAtB,CAGA,GAAMC,CAAAA,WAAW,CAAG,EAApB,C,GAgDMC,CAAAA,U,mRAOK,iBACyD,KAAKC,KAD9D,CACCC,KADD,aACCA,KADD,8BACQC,IADR,CACQA,IADR,2BACeJ,WADf,kBAC4BK,KAD5B,aAC4BA,KAD5B,CACmCC,KADnC,aACmCA,KADnC,CAC0CC,UAD1C,aAC0CA,UAD1C,UAILZ,UAAU,CAACa,OAAX,CAAmBH,KAAnB,GAA6B,EAJxB,2BAGCI,eAHD,CAGCA,eAHD,+BAGmBH,KAAK,CAACI,MAAN,CAAaC,OAHhC,sBAG4CC,SAH5C,oDAKP,GAAMC,CAAAA,SAAS,CACb,KAAKX,KAAL,CAAWN,KAAX,GACCA,KAAK,CAACa,eAAD,CAAL,CAAuBK,OAAvB,GAAmC,oBAAnC,CAA0Df,KAD3D,CADF,CAIA,MACE,qBAAC,IAAD,EACE,KAAK,CAAE,CACL,CACEgB,KAAK,CAAEX,IADT,CAEEY,MAAM,CAAEZ,IAFV,CAGEa,YAAY,CAAEb,IAAI,CAAG,CAHvB,CAIEK,eAAe,CAAfA,eAJF,CADK,CAOLS,MAAM,CAACC,SAPF,CAQLP,SARK,CADT,iDAYE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLM,MAAM,CAACE,IADF,CAEL,CACExB,KAAK,CAAEiB,SADT,CAEEQ,QAAQ,CAAEjB,IAAI,CAAG,CAFnB,CAGEkB,UAAU,CAAElB,IAHd,CAFK,CAOLG,UAPK,CADT,CAUE,aAAa,CAAE,CAVjB,iDAYGJ,KAZH,CAZF,CADF,CA6BD,C,wBA7CsBV,KAAK,CAAC8B,S,EAAzBtB,U,CACGuB,W,CAAc,a,CADjBvB,U,CAGGwB,Y,CAAe,CACpBrB,IAAI,CAAEJ,WADc,C,CA6CxB,GAAMkB,CAAAA,MAAM,CAAGvB,UAAU,CAAC+B,MAAX,CAAkB,CAC/BP,SAAS,CAAE,CACTQ,cAAc,CAAE,QADP,CAETC,UAAU,CAAE,QAFH,CADoB,CAK/BR,IAAI,CAAE,CACJS,SAAS,CAAE,QADP,CAEJC,iBAAiB,CAAE,QAFf,CALyB,CAAlB,CAAf,CAWA,cAAehC,CAAAA,SAAS,CAACG,UAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport { Theme } from '../../types';\n\nconst defaultSize = 64;\n\ntype Props = {\n  /**\n   * Initials to show as the text in the `Avatar`.\n   */\n  label: string;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Style for text container\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the title.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-text.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Text size={24} label=\"XD\" />\n * );\n * ```\n */\nclass AvatarText extends React.Component<Props> {\n  static displayName = 'Avatar.Text';\n\n  static defaultProps = {\n    size: defaultSize,\n  };\n\n  render() {\n    const { label, size = defaultSize, style, theme, labelStyle } = this.props;\n\n    const { backgroundColor = theme.colors.primary, ...restStyle } =\n      StyleSheet.flatten(style) || {};\n    const textColor =\n      this.props.color ||\n      (color(backgroundColor).isLight() ? 'rgba(0, 0, 0, .54)' : white);\n\n    return (\n      <View\n        style={[\n          {\n            width: size,\n            height: size,\n            borderRadius: size / 2,\n            backgroundColor,\n          },\n          styles.container,\n          restStyle,\n        ]}\n      >\n        <Text\n          style={[\n            styles.text,\n            {\n              color: textColor,\n              fontSize: size / 2,\n              lineHeight: size,\n            },\n            labelStyle,\n          ]}\n          numberOfLines={1}\n        >\n          {label}\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n  },\n});\n\nexport default withTheme(AvatarText);\n"]}