import _extends from"@babel/runtime/helpers/extends";import _objectSpread from"@babel/runtime/helpers/objectSpread";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";import _possibleConstructorReturn from"@babel/runtime/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime/helpers/getPrototypeOf";import _inherits from"@babel/runtime/helpers/inherits";var _jsxFileName="/Users/satya/Workspace/Callstack/react-native-paper/src/components/List/ListItem.tsx";import color from'color';import*as React from'react';import{StyleSheet,View}from'react-native';import TouchableRipple from'../TouchableRipple';import Text from'../Typography/Text';import{withTheme}from'../../core/theming';var ListItem=function(_React$Component){_inherits(ListItem,_React$Component);function ListItem(){_classCallCheck(this,ListItem);return _possibleConstructorReturn(this,_getPrototypeOf(ListItem).apply(this,arguments));}_createClass(ListItem,[{key:"renderDescription",value:function renderDescription(descriptionColor,description){var _this$props=this.props,descriptionEllipsizeMode=_this$props.descriptionEllipsizeMode,descriptionStyle=_this$props.descriptionStyle,descriptionNumberOfLines=_this$props.descriptionNumberOfLines;return typeof description==='function'?description({ellipsizeMode:descriptionEllipsizeMode,color:descriptionColor,fontSize:styles.description.fontSize}):React.createElement(Text,{numberOfLines:descriptionNumberOfLines,ellipsizeMode:descriptionEllipsizeMode,style:[styles.description,{color:descriptionColor},descriptionStyle],__source:{fileName:_jsxFileName,lineNumber:144}},description);}},{key:"render",value:function render(){var _this$props2=this.props,left=_this$props2.left,right=_this$props2.right,title=_this$props2.title,description=_this$props2.description,onPress=_this$props2.onPress,theme=_this$props2.theme,style=_this$props2.style,titleStyle=_this$props2.titleStyle,titleNumberOfLines=_this$props2.titleNumberOfLines,titleEllipsizeMode=_this$props2.titleEllipsizeMode,rest=_objectWithoutProperties(_this$props2,["left","right","title","description","onPress","theme","style","titleStyle","titleNumberOfLines","titleEllipsizeMode"]);var titleColor=color(theme.colors.text).alpha(0.87).rgb().string();var descriptionColor=color(theme.colors.text).alpha(0.54).rgb().string();return React.createElement(TouchableRipple,_extends({},rest,{style:[styles.container,style],onPress:onPress,__source:{fileName:_jsxFileName,lineNumber:182}}),React.createElement(View,{style:styles.row,__source:{fileName:_jsxFileName,lineNumber:187}},left?left({color:descriptionColor,style:description?styles.iconMarginLeft:_objectSpread({},styles.iconMarginLeft,styles.marginVerticalNone)}):null,React.createElement(View,{style:[styles.item,styles.content],pointerEvents:"none",__source:{fileName:_jsxFileName,lineNumber:199}},React.createElement(Text,{ellipsizeMode:titleEllipsizeMode,numberOfLines:titleNumberOfLines,style:[styles.title,{color:titleColor},titleStyle],__source:{fileName:_jsxFileName,lineNumber:200}},title),description?this.renderDescription(descriptionColor,description):null),right?right({color:descriptionColor,style:description?styles.iconMarginRight:_objectSpread({},styles.iconMarginRight,styles.marginVerticalNone)}):null));}}]);return ListItem;}(React.Component);ListItem.displayName='List.Item';ListItem.defaultProps={titleNumberOfLines:1,descriptionNumberOfLines:2};var styles=StyleSheet.create({container:{padding:8},row:{flexDirection:'row'},title:{fontSize:16},description:{fontSize:14},marginVerticalNone:{marginVertical:0},iconMarginLeft:{marginLeft:0,marginRight:16},iconMarginRight:{marginRight:0},item:{marginVertical:6,paddingLeft:8},content:{flex:1,justifyContent:'center'}});export default withTheme(ListItem);
//# sourceMappingURL=ListItem.js.map