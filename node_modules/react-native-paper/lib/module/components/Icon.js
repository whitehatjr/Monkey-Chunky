import _extends from"@babel/runtime/helpers/extends";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _jsxFileName="/Users/satya/Workspace/Callstack/react-native-paper/src/components/Icon.tsx";import*as React from'react';import{Image,I18nManager,Platform}from'react-native';import{Consumer as SettingsConsumer}from'../core/settings';import{accessibilityProps}from'./MaterialCommunityIcon';import{withTheme}from'../core/theming';var isImageSource=function isImageSource(source){return typeof source==='object'&&source!==null&&Object.prototype.hasOwnProperty.call(source,'uri')&&typeof source.uri==='string'||typeof source==='number'||Platform.OS==='web'&&typeof source==='string'&&(source.startsWith('data:image')||/\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source));};var getIconId=function getIconId(source){if(typeof source==='object'&&source!==null&&Object.prototype.hasOwnProperty.call(source,'uri')&&typeof source.uri==='string'){return source.uri;}return source;};export var isValidIcon=function isValidIcon(source){return typeof source==='string'||isImageSource(source);};export var isEqualIcon=function isEqualIcon(a,b){return a===b||getIconId(a)===getIconId(b);};var Icon=function Icon(_ref){var source=_ref.source,color=_ref.color,size=_ref.size,theme=_ref.theme,rest=_objectWithoutProperties(_ref,["source","color","size","theme"]);var direction=typeof source==='object'&&source.direction&&source.source?source.direction==='auto'?I18nManager.isRTL?'rtl':'ltr':source.direction:null;var s=typeof source==='object'&&source.direction&&source.source?source.source:source;var iconColor=color||theme.colors.text;if(isImageSource(s)){return React.createElement(Image,_extends({},rest,{source:s,style:[{transform:[{scaleX:direction==='rtl'?-1:1}]},{width:size,height:size,tintColor:color,resizeMode:'contain'}]},accessibilityProps,{__source:{fileName:_jsxFileName,lineNumber:86}}));}else if(typeof s==='string'){return React.createElement(SettingsConsumer,{__source:{fileName:_jsxFileName,lineNumber:106}},function(_ref2){var icon=_ref2.icon;return icon({name:s,color:iconColor,size:size,direction:direction});});}else if(typeof s==='function'){return s({color:iconColor,size:size,direction:direction});}return null;};export default withTheme(Icon);
//# sourceMappingURL=Icon.js.map