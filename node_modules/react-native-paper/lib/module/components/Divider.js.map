{"version":3,"sources":["Divider.tsx"],"names":["React","color","StyleSheet","View","withTheme","black","white","Divider","props","inset","style","theme","rest","isDarkTheme","dark","styles","light","Component","create","backgroundColor","alpha","rgb","string","height","hairlineWidth","marginLeft"],"mappings":"+jBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,IAArB,KAAuD,cAAvD,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,OAASC,KAAT,CAAgBC,KAAhB,KAA6B,kBAA7B,C,GAoCMC,CAAAA,O,oQACK,iBACkC,KAAKC,KADvC,CACCC,KADD,aACCA,KADD,CACQC,KADR,aACQA,KADR,CACeC,KADf,aACeA,KADf,CACyBC,IADzB,oEAEOC,CAAAA,WAFP,CAEuBF,KAFvB,CAECG,IAFD,CAGP,MACE,qBAAC,IAAD,aACMF,IADN,EAEE,KAAK,CAAE,CACLC,WAAW,CAAGE,MAAM,CAACD,IAAV,CAAiBC,MAAM,CAACC,KAD9B,CAELP,KAAK,EAAIM,MAAM,CAACN,KAFX,CAGLC,KAHK,CAFT,kDADF,CAUD,C,qBAdmBV,KAAK,CAACiB,S,EAiB5B,GAAMF,CAAAA,MAAM,CAAGb,UAAU,CAACgB,MAAX,CAAkB,CAC/BF,KAAK,CAAE,CACLG,eAAe,CAAElB,KAAK,CAACI,KAAD,CAAL,CACde,KADc,CACR,IADQ,EAEdC,GAFc,GAGdC,MAHc,EADZ,CAKLC,MAAM,CAAErB,UAAU,CAACsB,aALd,CADwB,CAQ/BV,IAAI,CAAE,CACJK,eAAe,CAAElB,KAAK,CAACK,KAAD,CAAL,CACdc,KADc,CACR,IADQ,EAEdC,GAFc,GAGdC,MAHc,EADb,CAKJC,MAAM,CAAErB,UAAU,CAACsB,aALf,CARyB,CAe/Bf,KAAK,CAAE,CACLgB,UAAU,CAAE,EADP,CAfwB,CAAlB,CAAf,CAoBA,cAAerB,CAAAA,SAAS,CAACG,OAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View, ViewStyle, StyleProp } from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { black, white } from '../styles/colors';\nimport { Theme, $RemoveChildren } from '../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   *  Whether divider has a left inset.\n   */\n  inset?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Apple</Text>\n *     <Divider />\n *     <Text>Orange</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Divider extends React.Component<Props> {\n  render() {\n    const { inset, style, theme, ...rest } = this.props;\n    const { dark: isDarkTheme } = theme;\n    return (\n      <View\n        {...rest}\n        style={[\n          isDarkTheme ? styles.dark : styles.light,\n          inset && styles.inset,\n          style,\n        ]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  light: {\n    backgroundColor: color(black)\n      .alpha(0.12)\n      .rgb()\n      .string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  dark: {\n    backgroundColor: color(white)\n      .alpha(0.12)\n      .rgb()\n      .string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  inset: {\n    marginLeft: 72,\n  },\n});\n\nexport default withTheme(Divider);\n"]}