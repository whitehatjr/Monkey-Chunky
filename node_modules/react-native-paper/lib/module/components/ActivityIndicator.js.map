{"version":3,"sources":["ActivityIndicator.tsx"],"names":["React","Animated","Easing","Platform","StyleSheet","View","withTheme","DURATION","ActivityIndicator","state","timer","Value","fade","props","animating","hidesWhenStopped","rotation","undefined","startRotation","timing","duration","toValue","isInteraction","useNativeDriver","start","setValue","loop","stopRotation","stop","easing","linear","OS","prevProps","bind","indicatorColor","color","indicatorSize","size","style","theme","rest","colors","primary","frames","bezier","containerStyle","width","height","overflow","styles","container","opacity","map","index","inputRange","Array","from","_","frameIndex","outputRange","progress","direction","layerStyle","transform","rotate","interpolate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","layer","Component","defaultProps","create","justifyContent","alignItems","absoluteFillObject"],"mappings":"woBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OACEC,QADF,CAEEC,MAFF,CAGEC,QAHF,CAKEC,UALF,CAMEC,IANF,KAQO,cARP,CASA,OAASC,SAAT,KAA0B,iBAA1B,CAgCA,GAAMC,CAAAA,QAAQ,CAAG,IAAjB,C,GAsBMC,CAAAA,iB,0aAOJC,K,CAAQ,CACNC,KAAK,CAAE,GAAIT,CAAAA,QAAQ,CAACU,KAAb,CAAmB,CAAnB,CADD,CAENC,IAAI,CAAE,GAAIX,CAAAA,QAAQ,CAACU,KAAb,CACJ,CAAC,MAAKE,KAAL,CAAWC,SAAZ,EAAyB,MAAKD,KAAL,CAAWE,gBAApC,CAAuD,CAAvD,CAA2D,CADvD,CAFA,C,OAORC,Q,CAAoDC,S,OA0C5CC,a,CAAgB,UAAM,iBACJ,MAAKT,KADD,CACpBG,IADoB,aACpBA,IADoB,CACdF,KADc,aACdA,KADc,CAI5BT,QAAQ,CAACkB,MAAT,CAAgBP,IAAhB,CAAsB,CACpBQ,QAAQ,CAAE,GADU,CAEpBC,OAAO,CAAE,CAFW,CAGpBC,aAAa,CAAE,KAHK,CAIpBC,eAAe,CAAE,IAJG,CAAtB,EAKGC,KALH,GAQA,GAAI,MAAKR,QAAT,CAAmB,CACjBN,KAAK,CAACe,QAAN,CAAe,CAAf,EAEAxB,QAAQ,CAACyB,IAAT,CAAc,MAAKV,QAAnB,EAA6BQ,KAA7B,GACD,CACF,C,OAEOG,Y,CAAe,UAAM,CAC3B,GAAI,MAAKX,QAAT,CAAmB,CACjB,MAAKA,QAAL,CAAcY,IAAd,GACD,CACF,C,0GA/DmB,IACVd,CAAAA,SADU,CACI,KAAKD,KADT,CACVC,SADU,IAEVJ,CAAAA,KAFU,CAEA,KAAKD,KAFL,CAEVC,KAFU,CAKlB,KAAKM,QAAL,CAAgBf,QAAQ,CAACkB,MAAT,CAAgBT,KAAhB,CAAuB,CACrCU,QAAQ,CAAEb,QAD2B,CAErCsB,MAAM,CAAE3B,MAAM,CAAC4B,MAFsB,CAIrCP,eAAe,CAAEpB,QAAQ,CAAC4B,EAAT,GAAgB,KAJI,CAKrCV,OAAO,CAAE,CAL4B,CAMrCC,aAAa,CAAE,KANsB,CAAvB,CAAhB,CASA,GAAIR,SAAJ,CAAe,CACb,KAAKI,aAAL,GACD,CACF,C,8DAEkBc,S,CAAkB,iBACK,KAAKnB,KADV,CAC3BC,SAD2B,aAC3BA,SAD2B,CAChBC,gBADgB,aAChBA,gBADgB,IAE3BH,CAAAA,IAF2B,CAElB,KAAKH,KAFa,CAE3BG,IAF2B,CAInC,GAAIE,SAAS,GAAKkB,SAAS,CAAClB,SAA5B,CAAuC,CACrC,GAAIA,SAAJ,CAAe,CACb,KAAKI,aAAL,GACD,CAFD,IAEO,IAAIH,gBAAJ,CAAsB,CAE3Bd,QAAQ,CAACkB,MAAT,CAAgBP,IAAhB,CAAsB,CACpBQ,QAAQ,CAAE,GADU,CAEpBC,OAAO,CAAE,CAFW,CAGpBE,eAAe,CAAE,IAHG,CAIpBD,aAAa,CAAE,KAJK,CAAtB,EAKGE,KALH,CAKS,KAAKG,YAAL,CAAkBM,IAAlB,CAAuB,IAAvB,CALT,EAMD,CARM,IAQA,CACL,KAAKN,YAAL,GACD,CACF,CACF,C,uCA2BQ,kBACiB,KAAKlB,KADtB,CACCG,IADD,cACCA,IADD,CACOF,KADP,cACOA,KADP,kBAYH,KAAKG,KAZF,CAILC,SAJK,cAILA,SAJK,CAKEoB,cALF,cAKLC,KALK,CAOLpB,gBAPK,cAOLA,gBAPK,CAQCqB,aARD,cAQLC,IARK,CASLC,KATK,cASLA,KATK,CAULC,KAVK,cAULA,KAVK,CAWFC,IAXE,wGAaP,GAAML,CAAAA,KAAK,CAAGD,cAAc,EAAIK,KAAK,CAACE,MAAN,CAAaC,OAA7C,CACA,GAAML,CAAAA,IAAI,CACR,MAAOD,CAAAA,aAAP,GAAyB,QAAzB,CACIA,aAAa,GAAK,OAAlB,CACE,EADF,CAEE,EAHN,CAIIA,aAAa,CACbA,aADa,CAEb,EAPN,CASA,GAAMO,CAAAA,MAAM,CAAI,GAAKpC,QAAN,CAAkB,IAAjC,CACA,GAAMsB,CAAAA,MAAM,CAAG3B,MAAM,CAAC0C,MAAP,CAAc,GAAd,CAAmB,GAAnB,CAAwB,GAAxB,CAA6B,GAA7B,CAAf,CACA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,KAAK,CAAET,IADc,CAErBU,MAAM,CAAEV,IAAI,CAAG,CAFM,CAGrBW,QAAQ,CAAE,QAHW,CAAvB,CAMA,MACE,qBAAC,IAAD,WAAM,KAAK,CAAE,CAACC,MAAM,CAACC,SAAR,CAAmBZ,KAAnB,CAAb,EAA4CE,IAA5C,oDACE,oBAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAE,CAAC,CAAEM,KAAK,CAAET,IAAT,CAAeU,MAAM,CAAEV,IAAvB,CAA6Bc,OAAO,CAAEvC,IAAtC,CAAD,CAAtB,kDACG,CAAC,CAAD,CAAI,CAAJ,EAAOwC,GAAP,CAAW,SAAAC,KAAK,CAAI,CAEnB,GAAMC,CAAAA,UAAU,CAAGC,KAAK,CAACC,IAAN,CACjB,GAAID,CAAAA,KAAJ,CAAUZ,MAAV,CADiB,CAEjB,SAACc,CAAD,CAAIC,UAAJ,QAAmBA,CAAAA,UAAU,EAAIf,MAAM,CAAG,CAAb,CAA7B,EAFiB,CAAnB,CAIA,GAAMgB,CAAAA,WAAW,CAAGJ,KAAK,CAACC,IAAN,CAClB,GAAID,CAAAA,KAAJ,CAAUZ,MAAV,CADkB,CAElB,SAACc,CAAD,CAAIC,UAAJ,CAAmB,CACjB,GAAIE,CAAAA,QAAQ,CAAI,EAAIF,UAAL,EAAoBf,MAAM,CAAG,CAA7B,CAAf,CACA,GAAM3B,CAAAA,QAAQ,CAAGqC,KAAK,CAAG,EAAE,IAAM,EAAR,CAAH,CAAiB,EAAE,IAAM,EAAR,CAAvC,CAEA,GAAIO,QAAQ,CAAG,GAAf,CAAoB,CAClBA,QAAQ,CAAG,IAAMA,QAAjB,CACD,CAED,GAAMC,CAAAA,SAAS,CAAGR,KAAK,CAAG,CAAC,CAAJ,CAAQ,CAAC,CAAhC,CAEA,MAAUQ,CAAAA,SAAS,EAAI,IAAM,EAAV,CAAT,CAAyBhC,MAAM,CAAC+B,QAAD,CAA/B,CACR5C,QADF,OAED,CAdiB,CAApB,CAiBA,GAAM8C,CAAAA,UAAU,CAAG,CACjBhB,KAAK,CAAET,IADU,CAEjBU,MAAM,CAAEV,IAFS,CAGjB0B,SAAS,CAAE,CACT,CACEC,MAAM,CAAEtD,KAAK,CAACuD,WAAN,CAAkB,CACxBX,UAAU,CAAE,CAAC,CAAD,CAAI,CAAJ,CADY,CAExBK,WAAW,CAAE,CACR,EAAI,EAAJ,CAAS,EADD,OAER,EAAI,GAAJ,CAAU,EAAV,CAAe,EAFP,OAFW,CAAlB,CADV,CADS,CAHM,CAAnB,CAgBA,GAAMO,CAAAA,aAAa,CAAG,CACpBpB,KAAK,CAAET,IADa,CAEpBU,MAAM,CAAEV,IAFY,CAGpB0B,SAAS,CAAE,CACT,CACEI,UAAU,CAAEd,KAAK,CAAG,CAAChB,IAAD,CAAQ,CAAX,CAAe,CADlC,CADS,CAIT,CACE2B,MAAM,CAAEtD,KAAK,CAACuD,WAAN,CAAkB,CAAEX,UAAU,CAAVA,UAAF,CAAcK,WAAW,CAAXA,WAAd,CAAlB,CADV,CAJS,CAHS,CAAtB,CAaA,GAAMS,CAAAA,WAAW,CAAGf,KAAK,CAAG,CAAEgB,GAAG,CAAEhC,IAAI,CAAG,CAAd,CAAH,CAAuB,IAAhD,CAEA,GAAMiC,CAAAA,SAAS,CAAG,CAChBxB,KAAK,CAAET,IADS,CAEhBU,MAAM,CAAEV,IAFQ,CAGhBkC,WAAW,CAAEpC,KAHG,CAIhBqC,WAAW,CAAEnC,IAAI,CAAG,EAJJ,CAKhBoC,YAAY,CAAEpC,IAAI,CAAG,CALL,CAAlB,CAQA,MACE,qBAAC,QAAD,CAAU,IAAV,EAAe,GAAG,CAAEgB,KAApB,CAA2B,KAAK,CAAE,CAACJ,MAAM,CAACyB,KAAR,CAAlC,kDACE,oBAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAEZ,UAAtB,kDACE,oBAAC,QAAD,CAAU,IAAV,EACE,KAAK,CAAE,CAACjB,cAAD,CAAiBuB,WAAjB,CADT,CAEE,WAAW,CAAE,KAFf,kDAIE,oBAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAEF,aAAtB,kDACE,oBAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAErB,cAAtB,CAAsC,WAAW,CAAE,KAAnD,kDACE,oBAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAEyB,SAAtB,kDADF,CADF,CAJF,CADF,CADF,CADF,CAgBD,CA9EA,CADH,CADF,CADF,CAqFD,C,+BArM6BtE,KAAK,CAAC2E,S,EAAhCnE,iB,CACGoE,Y,CAA+B,CACpC9D,SAAS,CAAE,IADyB,CAEpCuB,IAAI,CAAE,OAF8B,CAGpCtB,gBAAgB,CAAE,IAHkB,C,CAuMxC,GAAMkC,CAAAA,MAAM,CAAG7C,UAAU,CAACyE,MAAX,CAAkB,CAC/B3B,SAAS,CAAE,CACT4B,cAAc,CAAE,QADP,CAETC,UAAU,CAAE,QAFH,CADoB,CAM/BL,KAAK,kBACAtE,UAAU,CAAC4E,kBADX,EAGHF,cAAc,CAAE,QAHb,CAIHC,UAAU,CAAE,QAJT,EAN0B,CAAlB,CAAf,CAcA,cAAezE,CAAAA,SAAS,CAACE,iBAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  timer: Animated.Value;\n  fade: Animated.Value;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass ActivityIndicator extends React.Component<Props, State> {\n  static defaultProps: Partial<Props> = {\n    animating: true,\n    size: 'small',\n    hidesWhenStopped: true,\n  };\n\n  state = {\n    timer: new Animated.Value(0),\n    fade: new Animated.Value(\n      !this.props.animating && this.props.hidesWhenStopped ? 0 : 1\n    ),\n  };\n\n  rotation: Animated.CompositeAnimation | undefined = undefined;\n\n  componentDidMount() {\n    const { animating } = this.props;\n    const { timer } = this.state;\n\n    // Circular animation in loop\n    this.rotation = Animated.timing(timer, {\n      duration: DURATION,\n      easing: Easing.linear,\n      // Animated.loop does not work if useNativeDriver is true on web\n      useNativeDriver: Platform.OS !== 'web',\n      toValue: 1,\n      isInteraction: false,\n    });\n\n    if (animating) {\n      this.startRotation();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { animating, hidesWhenStopped } = this.props;\n    const { fade } = this.state;\n\n    if (animating !== prevProps.animating) {\n      if (animating) {\n        this.startRotation();\n      } else if (hidesWhenStopped) {\n        // Hide indicator first and then stop rotation\n        Animated.timing(fade, {\n          duration: 200,\n          toValue: 0,\n          useNativeDriver: true,\n          isInteraction: false,\n        }).start(this.stopRotation.bind(this));\n      } else {\n        this.stopRotation();\n      }\n    }\n  }\n\n  private startRotation = () => {\n    const { fade, timer } = this.state;\n\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (this.rotation) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(this.rotation).start();\n    }\n  };\n\n  private stopRotation = () => {\n    if (this.rotation) {\n      this.rotation.stop();\n    }\n  };\n\n  render() {\n    const { fade, timer } = this.state;\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      animating,\n      color: indicatorColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      hidesWhenStopped,\n      size: indicatorSize,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const color = indicatorColor || theme.colors.primary;\n    const size =\n      typeof indicatorSize === 'string'\n        ? indicatorSize === 'small'\n          ? 24\n          : 48\n        : indicatorSize\n        ? indicatorSize\n        : 24;\n\n    const frames = (60 * DURATION) / 1000;\n    const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n    const containerStyle = {\n      width: size,\n      height: size / 2,\n      overflow: 'hidden',\n    };\n\n    return (\n      <View style={[styles.container, style]} {...rest}>\n        <Animated.View style={[{ width: size, height: size, opacity: fade }]}>\n          {[0, 1].map(index => {\n            // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n            const inputRange = Array.from(\n              new Array(frames),\n              (_, frameIndex) => frameIndex / (frames - 1)\n            );\n            const outputRange = Array.from(\n              new Array(frames),\n              (_, frameIndex) => {\n                let progress = (2 * frameIndex) / (frames - 1);\n                const rotation = index ? +(360 - 15) : -(180 - 15);\n\n                if (progress > 1.0) {\n                  progress = 2.0 - progress;\n                }\n\n                const direction = index ? -1 : +1;\n\n                return `${direction * (180 - 30) * easing(progress) +\n                  rotation}deg`;\n              }\n            );\n\n            const layerStyle = {\n              width: size,\n              height: size,\n              transform: [\n                {\n                  rotate: timer.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [\n                      `${0 + 30 + 15}deg`,\n                      `${2 * 360 + 30 + 15}deg`,\n                    ],\n                  }),\n                },\n              ],\n            };\n\n            const viewportStyle = {\n              width: size,\n              height: size,\n              transform: [\n                {\n                  translateY: index ? -size / 2 : 0,\n                },\n                {\n                  rotate: timer.interpolate({ inputRange, outputRange }),\n                },\n              ],\n            };\n\n            const offsetStyle = index ? { top: size / 2 } : null;\n\n            const lineStyle = {\n              width: size,\n              height: size,\n              borderColor: color,\n              borderWidth: size / 10,\n              borderRadius: size / 2,\n            };\n\n            return (\n              <Animated.View key={index} style={[styles.layer]}>\n                <Animated.View style={layerStyle}>\n                  <Animated.View\n                    style={[containerStyle, offsetStyle]}\n                    collapsable={false}\n                  >\n                    <Animated.View style={viewportStyle}>\n                      <Animated.View style={containerStyle} collapsable={false}>\n                        <Animated.View style={lineStyle} />\n                      </Animated.View>\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            );\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(ActivityIndicator);\n"]}