{"version":3,"sources":["RadioButtonGroup.tsx"],"names":["React","RadioButtonContext","createContext","RadioButtonGroup","props","value","onValueChange","children","Component","displayName"],"mappings":"8bAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAsBA,MAAO,IAAMC,CAAAA,kBAAkB,CAAGD,KAAK,CAACE,aAAN,CAChC,IADgC,CAA3B,C,GAsCDC,CAAAA,gB,iTAGK,iBACoC,KAAKC,KADzC,CACCC,KADD,aACCA,KADD,CACQC,aADR,aACQA,aADR,CACuBC,QADvB,aACuBA,QADvB,CAGP,MACE,qBAAC,kBAAD,CAAoB,QAApB,EAA6B,KAAK,CAAE,CAAEF,KAAK,CAALA,KAAF,CAASC,aAAa,CAAbA,aAAT,CAApC,iDACGC,QADH,CADF,CAKD,C,8BAX4BP,KAAK,CAACQ,S,EAA/BL,gB,CACGM,W,CAAc,mB,CAavB,cAAeN,CAAAA,gBAAf","sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void;\n  /**\n   * Value of the currently selected radio button.\n   */\n  value: string;\n  /**\n   * React elements containing radio buttons.\n   */\n  children: React.ReactNode;\n};\n\nexport type RadioButtonContextType = {\n  value: string;\n  onValueChange: (item: string) => void;\n};\n\nexport const RadioButtonContext = React.createContext<RadioButtonContextType>(\n  null as any\n);\n\n/**\n * Radio button group allows to control a group of radio buttons.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton, Text } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     value: 'first',\n *   };\n *\n *   render() {\n *     return(\n *       <RadioButton.Group\n *         onValueChange={value => this.setState({ value })}\n *         value={this.state.value}\n *       >\n *         <View>\n *           <Text>First</Text>\n *           <RadioButton value=\"first\" />\n *         </View>\n *         <View>\n *           <Text>Second</Text>\n *           <RadioButton value=\"second\" />\n *         </View>\n *       </RadioButton.Group>\n *     )\n *   }\n * }\n *```\n */\nclass RadioButtonGroup extends React.Component<Props> {\n  static displayName = 'RadioButton.Group';\n\n  render() {\n    const { value, onValueChange, children } = this.props;\n\n    return (\n      <RadioButtonContext.Provider value={{ value, onValueChange }}>\n        {children}\n      </RadioButtonContext.Provider>\n    );\n  }\n}\n\nexport default RadioButtonGroup;\n"]}