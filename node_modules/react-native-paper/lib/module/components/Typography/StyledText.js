import _extends from"@babel/runtime/helpers/extends";import _objectSpread from"@babel/runtime/helpers/objectSpread";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";import _possibleConstructorReturn from"@babel/runtime/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime/helpers/getPrototypeOf";import _inherits from"@babel/runtime/helpers/inherits";var _jsxFileName="/Users/satya/Workspace/Callstack/react-native-paper/src/components/Typography/StyledText.tsx";import color from'color';import*as React from'react';import{I18nManager}from'react-native';import Text from'./Text';import{withTheme}from'../../core/theming';var StyledText=function(_React$Component){_inherits(StyledText,_React$Component);function StyledText(){_classCallCheck(this,StyledText);return _possibleConstructorReturn(this,_getPrototypeOf(StyledText).apply(this,arguments));}_createClass(StyledText,[{key:"render",value:function render(){var _this$props=this.props,theme=_this$props.theme,alpha=_this$props.alpha,family=_this$props.family,style=_this$props.style,rest=_objectWithoutProperties(_this$props,["theme","alpha","family","style"]);var textColor=color(theme.colors.text).alpha(alpha).rgb().string();var font=theme.fonts[family];var writingDirection=I18nManager.isRTL?'rtl':'ltr';return React.createElement(Text,_extends({},rest,{style:[_objectSpread({color:textColor},font,{textAlign:'left',writingDirection:writingDirection}),style,this.props.style],__source:{fileName:_jsxFileName,lineNumber:27}}));}}]);return StyledText;}(React.Component);export default withTheme(StyledText);
//# sourceMappingURL=StyledText.js.map