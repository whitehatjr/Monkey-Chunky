import _extends from"@babel/runtime/helpers/extends";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";import _possibleConstructorReturn from"@babel/runtime/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime/helpers/getPrototypeOf";import _inherits from"@babel/runtime/helpers/inherits";var _jsxFileName="/Users/satya/Workspace/Callstack/react-native-paper/src/components/Divider.tsx";import*as React from'react';import color from'color';import{StyleSheet,View}from'react-native';import{withTheme}from'../core/theming';import{black,white}from'../styles/colors';var Divider=function(_React$Component){_inherits(Divider,_React$Component);function Divider(){_classCallCheck(this,Divider);return _possibleConstructorReturn(this,_getPrototypeOf(Divider).apply(this,arguments));}_createClass(Divider,[{key:"render",value:function render(){var _this$props=this.props,inset=_this$props.inset,style=_this$props.style,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,["inset","style","theme"]);var isDarkTheme=theme.dark;return React.createElement(View,_extends({},rest,{style:[isDarkTheme?styles.dark:styles.light,inset&&styles.inset,style],__source:{fileName:_jsxFileName,lineNumber:46}}));}}]);return Divider;}(React.Component);var styles=StyleSheet.create({light:{backgroundColor:color(black).alpha(0.12).rgb().string(),height:StyleSheet.hairlineWidth},dark:{backgroundColor:color(white).alpha(0.12).rgb().string(),height:StyleSheet.hairlineWidth},inset:{marginLeft:72}});export default withTheme(Divider);
//# sourceMappingURL=Divider.js.map