import _toConsumableArray from"@babel/runtime/helpers/toConsumableArray";var _jsxFileName="/Users/satya/Workspace/Callstack/react-native-paper/src/components/TextInput/Label/LabelBackground.tsx";import*as React from'react';import{Animated,StyleSheet}from'react-native';import AnimatedText from'../../Typography/AnimatedText';var LabelBackground=function LabelBackground(_ref){var parentState=_ref.parentState,_ref$labelProps=_ref.labelProps,placeholderStyle=_ref$labelProps.placeholderStyle,baseLabelTranslateX=_ref$labelProps.baseLabelTranslateX,topPosition=_ref$labelProps.topPosition,hasActiveOutline=_ref$labelProps.hasActiveOutline,label=_ref$labelProps.label,backgroundColor=_ref$labelProps.backgroundColor,labelStyle=_ref.labelStyle;var hasFocus=hasActiveOutline||parentState.value;var opacity=parentState.labeled.interpolate({inputRange:[0,1],outputRange:[hasFocus?1:0,0]});var labelTranslationX={transform:[{translateX:parentState.labeled.interpolate({inputRange:[0,1],outputRange:[-baseLabelTranslateX,0]})}]};return label?[React.createElement(Animated.View,{key:"labelBackground-view",pointerEvents:"none",style:[StyleSheet.absoluteFill,styles.view,{backgroundColor:backgroundColor,opacity:opacity},labelTranslationX],__source:{fileName:_jsxFileName,lineNumber:39}}),React.createElement(AnimatedText,{key:"labelBackground-text",style:[placeholderStyle,labelStyle,styles.outlinedLabel,{top:topPosition+1,backgroundColor:backgroundColor,opacity:opacity,transform:[].concat(_toConsumableArray(labelStyle.transform),[{scaleY:parentState.labeled.interpolate({inputRange:[0,1],outputRange:[0.2,1]})}])}],numberOfLines:1,__source:{fileName:_jsxFileName,lineNumber:52}},label)]:null;};export default LabelBackground;var styles=StyleSheet.create({view:{position:'absolute',top:6,left:10,width:8,height:2},outlinedLabel:{position:'absolute',left:18,paddingHorizontal:0,color:'transparent'}});
//# sourceMappingURL=LabelBackground.js.map