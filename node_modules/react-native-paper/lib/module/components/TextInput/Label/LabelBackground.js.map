{"version":3,"sources":["LabelBackground.tsx"],"names":["React","Animated","StyleSheet","AnimatedText","LabelBackground","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","hasActiveOutline","label","backgroundColor","labelStyle","hasFocus","value","opacity","labeled","interpolate","inputRange","outputRange","labelTranslationX","transform","translateX","absoluteFill","styles","view","outlinedLabel","top","scaleY","create","position","left","width","height","paddingHorizontal","color"],"mappings":"mMAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,QAAT,CAAmBC,UAAnB,KAAqC,cAArC,CAEA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CAIA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAWI,IAV1BC,CAAAA,WAU0B,MAV1BA,WAU0B,sBAT1BC,UAS0B,CARxBC,gBAQwB,iBARxBA,gBAQwB,CAPxBC,mBAOwB,iBAPxBA,mBAOwB,CANxBC,WAMwB,iBANxBA,WAMwB,CALxBC,gBAKwB,iBALxBA,gBAKwB,CAJxBC,KAIwB,iBAJxBA,KAIwB,CAHxBC,eAGwB,iBAHxBA,eAGwB,CAD1BC,UAC0B,MAD1BA,UAC0B,CAC1B,GAAMC,CAAAA,QAAQ,CAAGJ,gBAAgB,EAAIL,WAAW,CAACU,KAAjD,CACA,GAAMC,CAAAA,OAAO,CAAGX,WAAW,CAACY,OAAZ,CAAoBC,WAApB,CAAgC,CAC9CC,UAAU,CAAE,CAAC,CAAD,CAAI,CAAJ,CADkC,CAE9CC,WAAW,CAAE,CAACN,QAAQ,CAAG,CAAH,CAAO,CAAhB,CAAmB,CAAnB,CAFiC,CAAhC,CAAhB,CAKA,GAAMO,CAAAA,iBAAiB,CAAG,CACxBC,SAAS,CAAE,CACT,CACEC,UAAU,CAAElB,WAAW,CAACY,OAAZ,CAAoBC,WAApB,CAAgC,CAC1CC,UAAU,CAAE,CAAC,CAAD,CAAI,CAAJ,CAD8B,CAE1CC,WAAW,CAAE,CAAC,CAACZ,mBAAF,CAAuB,CAAvB,CAF6B,CAAhC,CADd,CADS,CADa,CAA1B,CAWA,MAAOG,CAAAA,KAAK,CACR,CACE,oBAAC,QAAD,CAAU,IAAV,EACE,GAAG,CAAC,sBADN,CAEE,aAAa,CAAC,MAFhB,CAGE,KAAK,CAAE,CACLT,UAAU,CAACsB,YADN,CAELC,MAAM,CAACC,IAFF,CAGL,CACEd,eAAe,CAAfA,eADF,CAEEI,OAAO,CAAPA,OAFF,CAHK,CAOLK,iBAPK,CAHT,iDADF,CAcE,oBAAC,YAAD,EACE,GAAG,CAAC,sBADN,CAEE,KAAK,CAAE,CACLd,gBADK,CAELM,UAFK,CAGLY,MAAM,CAACE,aAHF,CAIL,CACEC,GAAG,CAAEnB,WAAW,CAAG,CADrB,CAEEG,eAAe,CAAfA,eAFF,CAGEI,OAAO,CAAPA,OAHF,CAIEM,SAAS,8BACJT,UAAU,CAACS,SADP,GAEP,CACEO,MAAM,CAAExB,WAAW,CAACY,OAAZ,CAAoBC,WAApB,CAAgC,CACtCC,UAAU,CAAE,CAAC,CAAD,CAAI,CAAJ,CAD0B,CAEtCC,WAAW,CAAE,CAAC,GAAD,CAAM,CAAN,CAFyB,CAAhC,CADV,CAFO,EAJX,CAJK,CAFT,CAqBE,aAAa,CAAE,CArBjB,iDAuBGT,KAvBH,CAdF,CADQ,CAyCR,IAzCJ,CA0CD,CAvED,CAyEA,cAAeP,CAAAA,eAAf,CAEA,GAAMqB,CAAAA,MAAM,CAAGvB,UAAU,CAAC4B,MAAX,CAAkB,CAC/BJ,IAAI,CAAE,CACJK,QAAQ,CAAE,UADN,CAEJH,GAAG,CAAE,CAFD,CAGJI,IAAI,CAAE,EAHF,CAIJC,KAAK,CAAE,CAJH,CAKJC,MAAM,CAAE,CALJ,CADyB,CAQ/BP,aAAa,CAAE,CACbI,QAAQ,CAAE,UADG,CAEbC,IAAI,CAAE,EAFO,CAGbG,iBAAiB,CAAE,CAHN,CAIbC,KAAK,CAAE,aAJM,CARgB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\n\nimport { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n  },\n  labelStyle,\n}: LabelBackgroundProps) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0],\n  });\n\n  const labelTranslationX = {\n    transform: [\n      {\n        translateX: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-baseLabelTranslateX, 0],\n        }),\n      },\n    ],\n  };\n\n  return label\n    ? [\n        <Animated.View\n          key=\"labelBackground-view\"\n          pointerEvents=\"none\"\n          style={[\n            StyleSheet.absoluteFill,\n            styles.view,\n            {\n              backgroundColor,\n              opacity,\n            },\n            labelTranslationX,\n          ]}\n        />,\n        <AnimatedText\n          key=\"labelBackground-text\"\n          style={[\n            placeholderStyle,\n            labelStyle,\n            styles.outlinedLabel,\n            {\n              top: topPosition + 1,\n              backgroundColor,\n              opacity,\n              transform: [\n                ...labelStyle.transform,\n                {\n                  scaleY: parentState.labeled.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.2, 1],\n                  }),\n                },\n              ],\n            },\n          ]}\n          numberOfLines={1}\n        >\n          {label}\n        </AnimatedText>,\n      ]\n    : null;\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 8,\n    height: 2,\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n});\n"]}