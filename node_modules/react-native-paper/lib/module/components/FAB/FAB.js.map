{"version":3,"sources":["FAB.tsx"],"names":["color","React","Animated","View","StyleSheet","ActivityIndicator","FABGroup","Surface","CrossFadeIcon","Text","TouchableRipple","black","white","withTheme","FAB","state","visibility","Value","props","visible","prevProps","timing","toValue","duration","useNativeDriver","start","small","icon","label","accessibilityLabel","customColor","disabled","onPress","theme","style","loading","rest","disabledColor","dark","alpha","rgb","string","flatten","backgroundColor","colors","accent","foregroundColor","isLight","rippleColor","opacity","transform","scale","styles","container","touchable","content","extended","standard","fonts","medium","toUpperCase","Component","Group","defaultProps","create","borderRadius","elevation","height","width","paddingHorizontal","flexDirection","alignItems","justifyContent","marginHorizontal"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { Animated, View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport ActivityIndicator from '../ActivityIndicator';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport FABGroup, { FABGroup as _FABGroup } from './FABGroup';\nimport Surface from '../Surface';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport { Theme, $RemoveChildren } from '../../types';\nimport { IconSource } from './../Icon';\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  visibility: Animated.Value;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-1.png\" />\n *   <img src=\"screenshots/fab-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     style={styles.fab}\n *     small\n *     icon=\"plus\"\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nclass FAB extends React.Component<Props, State> {\n  // @component ./FABGroup.tsx\n  static Group = FABGroup;\n\n  static defaultProps = {\n    visible: true,\n  };\n\n  state = {\n    visibility: new Animated.Value(this.props.visible ? 1 : 0),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.visible === prevProps.visible) {\n      return;\n    }\n\n    if (this.props.visible) {\n      Animated.timing(this.state.visibility, {\n        toValue: 1,\n        duration: 200,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(this.state.visibility, {\n        toValue: 0,\n        duration: 150,\n        useNativeDriver: true,\n      }).start();\n    }\n  }\n\n  render() {\n    const {\n      small,\n      icon,\n      label,\n      accessibilityLabel = label,\n      color: customColor,\n      disabled,\n      onPress,\n      theme,\n      style,\n      visible,\n      loading,\n      ...rest\n    } = this.props;\n    const { visibility } = this.state;\n\n    const disabledColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n      StyleSheet.flatten(style) || {};\n\n    let foregroundColor;\n\n    if (typeof customColor !== 'undefined') {\n      foregroundColor = customColor;\n    } else if (disabled) {\n      foregroundColor = color(theme.dark ? white : black)\n        .alpha(0.32)\n        .rgb()\n        .string();\n    } else {\n      foregroundColor = !color(backgroundColor).isLight()\n        ? white\n        : 'rgba(0, 0, 0, .54)';\n    }\n\n    const rippleColor = color(foregroundColor)\n      .alpha(0.32)\n      .rgb()\n      .string();\n\n    return (\n      <Surface\n        {...rest}\n        style={\n          [\n            {\n              backgroundColor,\n              opacity: visibility,\n              transform: [\n                {\n                  scale: visibility,\n                },\n              ],\n            },\n            styles.container,\n            disabled && styles.disabled,\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n      >\n        <TouchableRipple\n          borderless\n          onPress={onPress}\n          rippleColor={rippleColor}\n          disabled={disabled}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityStates={disabled ? ['disabled'] : []}\n          style={styles.touchable}\n        >\n          <View\n            style={[\n              styles.content,\n              label ? styles.extended : small ? styles.small : styles.standard,\n            ]}\n            pointerEvents=\"none\"\n          >\n            {icon && loading !== true ? (\n              <CrossFadeIcon source={icon} size={24} color={foregroundColor} />\n            ) : null}\n            {loading ? (\n              <ActivityIndicator size={18} color={foregroundColor} />\n            ) : null}\n            {label ? (\n              <Text\n                style={[\n                  styles.label,\n                  { color: foregroundColor, ...theme.fonts.medium },\n                ]}\n              >\n                {label.toUpperCase()}\n              </Text>\n            ) : null}\n          </View>\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6,\n  },\n  touchable: {\n    borderRadius: 28,\n  },\n  standard: {\n    height: 56,\n    width: 56,\n  },\n  small: {\n    height: 40,\n    width: 40,\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(FAB);\n"]}