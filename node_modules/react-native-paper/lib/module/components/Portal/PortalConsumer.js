import _regeneratorRuntime from"@babel/runtime/regenerator";import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";import _possibleConstructorReturn from"@babel/runtime/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime/helpers/getPrototypeOf";import _inherits from"@babel/runtime/helpers/inherits";import*as React from'react';var PortalConsumer=function(_React$Component){_inherits(PortalConsumer,_React$Component);function PortalConsumer(){_classCallCheck(this,PortalConsumer);return _possibleConstructorReturn(this,_getPrototypeOf(PortalConsumer).apply(this,arguments));}_createClass(PortalConsumer,[{key:"componentDidMount",value:function componentDidMount(){return _regeneratorRuntime.async(function componentDidMount$(_context){while(1){switch(_context.prev=_context.next){case 0:this.checkManager();_context.next=3;return _regeneratorRuntime.awrap(Promise.resolve());case 3:this.key=this.props.manager.mount(this.props.children);case 4:case"end":return _context.stop();}}},null,this);}},{key:"componentDidUpdate",value:function componentDidUpdate(){this.checkManager();this.props.manager.update(this.key,this.props.children);}},{key:"componentWillUnmount",value:function componentWillUnmount(){this.checkManager();this.props.manager.unmount(this.key);}},{key:"checkManager",value:function checkManager(){if(!this.props.manager){throw new Error('Looks like you forgot to wrap your root component with `Provider` component from `react-native-paper`.\n\n'+"Please read our getting-started guide and make sure you've followed all the required steps.\n\n"+'https://callstack.github.io/react-native-paper/getting-started.html');}}},{key:"render",value:function render(){return null;}}]);return PortalConsumer;}(React.Component);export{PortalConsumer as default};
//# sourceMappingURL=PortalConsumer.js.map