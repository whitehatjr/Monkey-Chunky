{"version":3,"sources":["Portal.tsx"],"names":["React","PortalConsumer","PortalHost","PortalContext","ThemeProvider","withTheme","Portal","props","children","theme","manager","Component","Host"],"mappings":"2bAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,UAAP,EAAqBC,aAArB,KAAyD,cAAzD,CACA,OAASC,aAAT,CAAwBC,SAAxB,KAAyC,oBAAzC,C,GAmCMC,CAAAA,M,+PAIK,iBACqB,KAAKC,KAD1B,CACCC,QADD,aACCA,QADD,CACWC,KADX,aACWA,KADX,CAGP,MACE,qBAAC,aAAD,CAAe,QAAf,kDACG,SAAAC,OAAO,QACN,qBAAC,cAAD,EAAgB,OAAO,CAAEA,OAAzB,iDACE,oBAAC,aAAD,EAAe,KAAK,CAAED,KAAtB,iDAA8BD,QAA9B,CADF,CADM,EADV,CADF,CASD,C,oBAhBkBR,KAAK,CAACW,S,EAArBL,M,CAEGM,I,CAAOV,U,CAiBhB,cAAeG,CAAAA,SAAS,CAACC,MAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport PortalConsumer from './PortalConsumer';\nimport PortalHost, { PortalContext, PortalMethods } from './PortalHost';\nimport { ThemeProvider, withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = {\n  /**\n   * Content of the `Portal`.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Portal allows to render a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <Portal>\n *         <Text>This is rendered at a different place</Text>\n *       </Portal>\n *     );\n *   }\n * }\n * ```\n */\nclass Portal extends React.Component<Props> {\n  // @component ./PortalHost.tsx\n  static Host = PortalHost;\n\n  render() {\n    const { children, theme } = this.props;\n\n    return (\n      <PortalContext.Consumer>\n        {manager => (\n          <PortalConsumer manager={manager as PortalMethods}>\n            <ThemeProvider theme={theme}>{children}</ThemeProvider>\n          </PortalConsumer>\n        )}\n      </PortalContext.Consumer>\n    );\n  }\n}\n\nexport default withTheme(Portal);\n"]}