{"version":3,"sources":["DataTableHeader.tsx"],"names":["React","color","StyleSheet","View","black","white","withTheme","DataTableHeader","props","children","style","theme","rest","borderBottomColor","dark","alpha","rgb","string","styles","header","Component","displayName","create","flexDirection","height","paddingHorizontal","borderBottomWidth","hairlineWidth"],"mappings":"ilBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAgCC,IAAhC,KAAuD,cAAvD,CACA,OAASC,KAAT,CAAgBC,KAAhB,KAA6B,qBAA7B,CACA,OAASC,SAAT,KAA0B,oBAA1B,C,GAeMC,CAAAA,e,4SAGK,iBACqC,KAAKC,KAD1C,CACCC,QADD,aACCA,QADD,CACWC,KADX,aACWA,KADX,CACkBC,KADlB,aACkBA,KADlB,CAC4BC,IAD5B,oEAEP,GAAMC,CAAAA,iBAAiB,CAAGZ,KAAK,CAACU,KAAK,CAACG,IAAN,CAAaT,KAAb,CAAqBD,KAAtB,CAAL,CACvBW,KADuB,CACjB,IADiB,EAEvBC,GAFuB,GAGvBC,MAHuB,EAA1B,CAKA,MACE,qBAAC,IAAD,aAAUL,IAAV,EAAgB,KAAK,CAAE,CAACM,MAAM,CAACC,MAAR,CAAgB,CAAEN,iBAAiB,CAAjBA,iBAAF,CAAhB,CAAuCH,KAAvC,CAAvB,kDACGD,QADH,CADF,CAKD,C,6BAf2BT,KAAK,CAACoB,S,EAA9Bb,e,CACGc,W,CAAc,kB,CAiBvB,GAAMH,CAAAA,MAAM,CAAGhB,UAAU,CAACoB,MAAX,CAAkB,CAC/BH,MAAM,CAAE,CACNI,aAAa,CAAE,KADT,CAENC,MAAM,CAAE,EAFF,CAGNC,iBAAiB,CAAE,EAHb,CAINC,iBAAiB,CAAExB,UAAU,CAACyB,aAAX,CAA2B,CAJxC,CADuB,CAAlB,CAAf,CASA,cAAerB,CAAAA,SAAS,CAACC,eAAD,CAAxB,CAGA,OAASA,eAAT","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Content of the `DataTableHeader`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nclass DataTableHeader extends React.Component<Props> {\n  static displayName = 'DataTable.Header';\n\n  render() {\n    const { children, style, theme, ...rest } = this.props;\n    const borderBottomColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    return (\n      <View {...rest} style={[styles.header, { borderBottomColor }, style]}>\n        {children}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2,\n  },\n});\n\nexport default withTheme(DataTableHeader);\n\n// @component-docs ignore-next-line\nexport { DataTableHeader };\n"]}