{"version":3,"sources":["DataTableRow.tsx"],"names":["React","color","StyleSheet","View","TouchableRipple","black","white","withTheme","DataTableRow","props","onPress","style","theme","rest","borderBottomColor","dark","alpha","rgb","string","styles","container","content","children","Component","displayName","create","borderStyle","borderBottomWidth","hairlineWidth","minHeight","paddingHorizontal","flex","flexDirection"],"mappings":"8kBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAgCC,IAAhC,KAAuD,cAAvD,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CACA,OAASC,KAAT,CAAgBC,KAAhB,KAA6B,qBAA7B,CACA,OAASC,SAAT,KAA0B,oBAA1B,C,GAmBMC,CAAAA,Y,6RAGK,iBACoC,KAAKC,KADzC,CACCC,OADD,aACCA,OADD,CACUC,KADV,aACUA,KADV,CACiBC,KADjB,aACiBA,KADjB,CAC2BC,IAD3B,mEAEP,GAAMC,CAAAA,iBAAiB,CAAGb,KAAK,CAACW,KAAK,CAACG,IAAN,CAAaT,KAAb,CAAqBD,KAAtB,CAAL,CACvBW,KADuB,CACjB,IADiB,EAEvBC,GAFuB,GAGvBC,MAHuB,EAA1B,CAKA,MACE,qBAAC,eAAD,aACML,IADN,EAEE,OAAO,CAAEH,OAFX,CAGE,KAAK,CAAE,CAACS,MAAM,CAACC,SAAR,CAAmB,CAAEN,iBAAiB,CAAjBA,iBAAF,CAAnB,CAA0CH,KAA1C,CAHT,kDAKE,oBAAC,IAAD,EAAM,KAAK,CAAEQ,MAAM,CAACE,OAApB,iDAA8B,KAAKZ,KAAL,CAAWa,QAAzC,CALF,CADF,CASD,C,0BAnBwBtB,KAAK,CAACuB,S,EAA3Bf,Y,CACGgB,W,CAAc,e,CAqBvB,GAAML,CAAAA,MAAM,CAAGjB,UAAU,CAACuB,MAAX,CAAkB,CAC/BL,SAAS,CAAE,CACTM,WAAW,CAAE,OADJ,CAETC,iBAAiB,CAAEzB,UAAU,CAAC0B,aAFrB,CAGTC,SAAS,CAAE,EAHF,CAITC,iBAAiB,CAAE,EAJV,CADoB,CAO/BT,OAAO,CAAE,CACPU,IAAI,CAAE,CADC,CAEPC,aAAa,CAAE,KAFR,CAPsB,CAAlB,CAAf,CAaA,cAAezB,CAAAA,SAAS,CAACC,YAAD,CAAxB,CAGA,OAASA,YAAT","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nclass DataTableRow extends React.Component<Props> {\n  static displayName = 'DataTable.Row';\n\n  render() {\n    const { onPress, style, theme, ...rest } = this.props;\n    const borderBottomColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableRipple\n        {...rest}\n        onPress={onPress}\n        style={[styles.container, { borderBottomColor }, style]}\n      >\n        <View style={styles.content}>{this.props.children}</View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]}