import _extends from"@babel/runtime/helpers/extends";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";import _possibleConstructorReturn from"@babel/runtime/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime/helpers/getPrototypeOf";import _inherits from"@babel/runtime/helpers/inherits";var _jsxFileName="/Users/satya/Workspace/Callstack/react-native-paper/src/components/RadioButtonAndroid.tsx";import*as React from'react';import{Animated,View,StyleSheet}from'react-native';import color from'color';import TouchableRipple from'./TouchableRipple';import{withTheme}from'../core/theming';var BORDER_WIDTH=2;var RadioButtonAndroid=function(_React$Component){_inherits(RadioButtonAndroid,_React$Component);function RadioButtonAndroid(){var _getPrototypeOf2;var _this;_classCallCheck(this,RadioButtonAndroid);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(RadioButtonAndroid)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={borderAnim:new Animated.Value(BORDER_WIDTH),radioAnim:new Animated.Value(1)};return _this;}_createClass(RadioButtonAndroid,[{key:"componentDidUpdate",value:function componentDidUpdate(prevProps){if(prevProps.status===this.props.status){return;}if(this.props.status==='checked'){this.state.radioAnim.setValue(1.2);Animated.timing(this.state.radioAnim,{toValue:1,duration:150}).start();}else{this.state.borderAnim.setValue(10);Animated.timing(this.state.borderAnim,{toValue:BORDER_WIDTH,duration:150}).start();}}},{key:"render",value:function render(){var _this2=this;var _this$props=this.props,disabled=_this$props.disabled,onPress=_this$props.onPress,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,["disabled","onPress","theme"]);var checkedColor=this.props.color||theme.colors.accent;var uncheckedColor=this.props.uncheckedColor||color(theme.colors.text).alpha(theme.dark?0.7:0.54).rgb().string();var rippleColor,radioColor;var checked=this.props.status==='checked';if(disabled){rippleColor=color(theme.colors.text).alpha(0.16).rgb().string();radioColor=theme.colors.disabled;}else{rippleColor=color(checkedColor).fade(0.32).rgb().string();radioColor=checked?checkedColor:uncheckedColor;}return React.createElement(TouchableRipple,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:disabled?undefined:function(){onPress&&onPress(_this2.props.value);},accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:checked?'radiobutton_checked':'radiobutton_unchecked',accessibilityRole:"button",accessibilityStates:disabled?['disabled']:[],accessibilityLiveRegion:"polite",style:styles.container,__source:{fileName:_jsxFileName,lineNumber:120}}),React.createElement(Animated.View,{style:[styles.radio,{borderColor:radioColor,borderWidth:this.state.borderAnim}],__source:{fileName:_jsxFileName,lineNumber:140}},checked?React.createElement(View,{style:[StyleSheet.absoluteFill,styles.radioContainer],__source:{fileName:_jsxFileName,lineNumber:150}},React.createElement(Animated.View,{style:[styles.dot,{backgroundColor:radioColor,transform:[{scale:this.state.radioAnim}]}],__source:{fileName:_jsxFileName,lineNumber:151}})):null));}}]);return RadioButtonAndroid;}(React.Component);RadioButtonAndroid.displayName='RadioButton.Android';var styles=StyleSheet.create({container:{borderRadius:18},radioContainer:{alignItems:'center',justifyContent:'center'},radio:{height:20,width:20,borderRadius:10,margin:8},dot:{height:10,width:10,borderRadius:5}});export default withTheme(RadioButtonAndroid);export{RadioButtonAndroid};
//# sourceMappingURL=RadioButtonAndroid.js.map