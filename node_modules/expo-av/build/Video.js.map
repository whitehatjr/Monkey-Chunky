{"version":3,"file":"Video.js","sourceRoot":"","sources":["../src/Video.tsx"],"names":[],"mappings":"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","sourcesContent":["import omit from 'lodash/omit';\nimport nullthrows from 'nullthrows';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {\n  findNodeHandle,\n  Image,\n  NativeComponent,\n  StyleSheet,\n  View,\n  ViewPropTypes,\n} from 'react-native';\n\nimport {\n  assertStatusValuesInBounds,\n  getNativeSourceAndFullInitialStatusForLoadAsync,\n  getNativeSourceFromSource,\n  getUnloadedStatus,\n  Playback,\n  PlaybackMixin,\n  PlaybackSource,\n  PlaybackStatus,\n  PlaybackStatusToSet,\n} from './AV';\nimport ExponentAV from './ExponentAV';\nimport ExponentVideo from './ExponentVideo';\nimport ExpoVideoManager from './ExpoVideoManager';\nimport {\n  ExponentVideoComponent,\n  FullscreenUpdateEvent,\n  NativeProps,\n  NaturalSize,\n  VideoProps,\n  ReadyForDisplayEvent,\n  ResizeMode,\n  VideoState,\n} from './Video.types';\n\nexport {\n  ExponentVideoComponent,\n  FullscreenUpdateEvent,\n  NativeProps,\n  NaturalSize,\n  VideoProps,\n  ReadyForDisplayEvent,\n  ResizeMode,\n  VideoState,\n};\n\nexport const FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = 0;\nexport const FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = 1;\nexport const FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = 2;\nexport const FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = 3;\n\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = FULLSCREEN_UPDATE_PLAYER_DID_PRESENT;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = FULLSCREEN_UPDATE_PLAYER_DID_DISMISS;\n\nconst _STYLES = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n  poster: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    resizeMode: 'contain',\n  },\n  video: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n\n// On a real device UIManager should be present, however when running offline tests with jest-expo\n// we have to use the provided native module mock to access constants\nconst ExpoVideoManagerConstants = ExpoVideoManager;\nconst ExpoVideoViewManager = ExpoVideoManager;\n\nexport default class Video extends React.Component<VideoProps, VideoState> implements Playback {\n  static RESIZE_MODE_CONTAIN = ResizeMode.CONTAIN;\n  static RESIZE_MODE_COVER = ResizeMode.COVER;\n  static RESIZE_MODE_STRETCH = ResizeMode.STRETCH;\n\n  static IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT;\n  static IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT;\n  static IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS;\n  static IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS;\n\n  static FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT;\n  static FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = FULLSCREEN_UPDATE_PLAYER_DID_PRESENT;\n  static FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS;\n  static FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = FULLSCREEN_UPDATE_PLAYER_DID_DISMISS;\n\n  static propTypes = {\n    // Source stuff\n    source: PropTypes.oneOfType([\n      PropTypes.shape({\n        uri: PropTypes.string,\n        overrideFileExtensionAndroid: PropTypes.string,\n      }), // remote URI like { uri: 'http://foo/bar.mp4' }\n      PropTypes.number, // asset module like require('./foo/bar.mp4')\n    ]),\n    posterSource: PropTypes.oneOfType([\n      PropTypes.shape({\n        uri: PropTypes.string,\n      }), // remote URI like { uri: 'http://foo/bar.mp4' }\n      PropTypes.number, // asset module like require('./foo/bar.mp4')\n    ]),\n    posterStyle: ViewPropTypes.style,\n\n    // Callbacks\n    onPlaybackStatusUpdate: PropTypes.func,\n    onLoadStart: PropTypes.func,\n    onLoad: PropTypes.func,\n    onError: PropTypes.func,\n    onIOSFullscreenUpdate: PropTypes.func,\n    onFullscreenUpdate: PropTypes.func,\n    onReadyForDisplay: PropTypes.func,\n\n    // UI stuff\n    useNativeControls: PropTypes.bool,\n    resizeMode: PropTypes.string,\n    usePoster: PropTypes.bool,\n\n    // Playback API\n    status: PropTypes.shape({\n      progressUpdateIntervalMillis: PropTypes.number,\n      positionMillis: PropTypes.number,\n      shouldPlay: PropTypes.bool,\n      rate: PropTypes.number,\n      shouldCorrectPitch: PropTypes.bool,\n      volume: PropTypes.number,\n      isMuted: PropTypes.bool,\n      isLooping: PropTypes.bool,\n    }),\n    progressUpdateIntervalMillis: PropTypes.number,\n    positionMillis: PropTypes.number,\n    shouldPlay: PropTypes.bool,\n    rate: PropTypes.number,\n    shouldCorrectPitch: PropTypes.bool,\n    volume: PropTypes.number,\n    isMuted: PropTypes.bool,\n    isLooping: PropTypes.bool,\n\n    // Required by react-native\n    scaleX: PropTypes.number,\n    scaleY: PropTypes.number,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    rotation: PropTypes.number,\n    ...ViewPropTypes,\n  };\n\n  _nativeRef = React.createRef<InstanceType<ExponentVideoComponent> & NativeComponent>();\n\n  // componentOrHandle: null | number | React.Component<any, any> | React.ComponentClass<any>\n\n  constructor(props: VideoProps) {\n    super(props);\n    this.state = {\n      showPoster: !!props.usePoster,\n    };\n  }\n\n  setNativeProps(nativeProps: NativeProps) {\n    const nativeVideo = nullthrows(this._nativeRef.current);\n    nativeVideo.setNativeProps(nativeProps);\n  }\n\n  // Internal methods\n\n  _handleNewStatus = (status: PlaybackStatus) => {\n    if (\n      this.state.showPoster &&\n      status.isLoaded &&\n      (status.isPlaying || status.positionMillis !== 0)\n    ) {\n      this.setState({ showPoster: false });\n    }\n\n    if (this.props.onPlaybackStatusUpdate) {\n      this.props.onPlaybackStatusUpdate(status);\n    }\n  };\n\n  _performOperationAndHandleStatusAsync = async (\n    operation: (tag: number) => Promise<PlaybackStatus>\n  ): Promise<PlaybackStatus> => {\n    const video = this._nativeRef.current;\n    if (!video) {\n      throw new Error(`Cannot complete operation because the Video component has not yet loaded`);\n    }\n\n    const handle = findNodeHandle(this._nativeRef.current)!;\n    const status: PlaybackStatus = await operation(handle);\n    this._handleNewStatus(status);\n    return status;\n  };\n\n  // ### iOS Fullscreening API ###\n\n  _setFullscreen = async (value: boolean) => {\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExpoVideoViewManager.setFullscreen(tag, value)\n    );\n  };\n\n  presentFullscreenPlayer = async () => {\n    return this._setFullscreen(true);\n  };\n\n  presentIOSFullscreenPlayer = () => {\n    console.warn(\n      \"You're using `presentIOSFullscreenPlayer`. Please migrate your code to use `presentFullscreenPlayer` instead.\"\n    );\n    return this.presentFullscreenPlayer();\n  };\n\n  presentFullscreenPlayerAsync = async () => {\n    return await this.presentFullscreenPlayer();\n  };\n\n  dismissFullscreenPlayer = async () => {\n    return this._setFullscreen(false);\n  };\n\n  dismissIOSFullscreenPlayer = () => {\n    console.warn(\n      \"You're using `dismissIOSFullscreenPlayer`. Please migrate your code to use `dismissFullscreenPlayer` instead.\"\n    );\n    this.dismissFullscreenPlayer();\n  };\n\n  // ### Unified playback API ### (consistent with Audio.js)\n  // All calls automatically call onPlaybackStatusUpdate as a side effect.\n\n  // Get status API\n\n  getStatusAsync = async (): Promise<PlaybackStatus> => {\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.getStatusForVideo(tag)\n    );\n  };\n\n  // Loading / unloading API\n\n  loadAsync = async (\n    source: PlaybackSource,\n    initialStatus: PlaybackStatusToSet = {},\n    downloadFirst: boolean = true\n  ): Promise<PlaybackStatus> => {\n    const {\n      nativeSource,\n      fullInitialStatus,\n    } = await getNativeSourceAndFullInitialStatusForLoadAsync(source, initialStatus, downloadFirst);\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.loadForVideo(tag, nativeSource, fullInitialStatus)\n    );\n  };\n\n  // Equivalent to setting URI to null.\n  unloadAsync = async (): Promise<PlaybackStatus> => {\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.unloadForVideo(tag)\n    );\n  };\n\n  // Set status API (only available while isLoaded = true)\n\n  setStatusAsync = async (status: PlaybackStatusToSet): Promise<PlaybackStatus> => {\n    assertStatusValuesInBounds(status);\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.setStatusForVideo(tag, status)\n    );\n  };\n\n  replayAsync = async (status: PlaybackStatusToSet = {}): Promise<PlaybackStatus> => {\n    if (status.positionMillis && status.positionMillis !== 0) {\n      throw new Error('Requested position after replay has to be 0.');\n    }\n\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.replayVideo(tag, {\n        ...status,\n        positionMillis: 0,\n        shouldPlay: true,\n      })\n    );\n  };\n\n  // Methods of the Playback interface that are set via PlaybackMixin\n  playAsync!: () => Promise<PlaybackStatus>;\n  playFromPositionAsync!: (\n    positionMillis: number,\n    tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n  ) => Promise<PlaybackStatus>;\n  pauseAsync!: () => Promise<PlaybackStatus>;\n  stopAsync!: () => Promise<PlaybackStatus>;\n  setPositionAsync!: (\n    positionMillis: number,\n    tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n  ) => Promise<PlaybackStatus>;\n  setRateAsync!: (rate: number, shouldCorrectPitch: boolean) => Promise<PlaybackStatus>;\n  setVolumeAsync!: (volume: number) => Promise<PlaybackStatus>;\n  setIsMutedAsync!: (isMuted: boolean) => Promise<PlaybackStatus>;\n  setIsLoopingAsync!: (isLooping: boolean) => Promise<PlaybackStatus>;\n  setProgressUpdateIntervalAsync!: (\n    progressUpdateIntervalMillis: number\n  ) => Promise<PlaybackStatus>;\n\n  // ### Callback wrappers ###\n\n  _nativeOnPlaybackStatusUpdate = (event: { nativeEvent: PlaybackStatus }) => {\n    this._handleNewStatus(event.nativeEvent);\n  };\n\n  // TODO make sure we are passing the right stuff\n  _nativeOnLoadStart = () => {\n    if (this.props.onLoadStart) {\n      this.props.onLoadStart();\n    }\n  };\n\n  _nativeOnLoad = (event: { nativeEvent: PlaybackStatus }) => {\n    if (this.props.onLoad) {\n      this.props.onLoad(event.nativeEvent);\n    }\n    this._handleNewStatus(event.nativeEvent);\n  };\n\n  _nativeOnError = (event: { nativeEvent: { error: string } }) => {\n    const error: string = event.nativeEvent.error;\n    if (this.props.onError) {\n      this.props.onError(error);\n    }\n    this._handleNewStatus(getUnloadedStatus(error));\n  };\n\n  _nativeOnReadyForDisplay = (event: { nativeEvent: ReadyForDisplayEvent }) => {\n    if (this.props.onReadyForDisplay) {\n      this.props.onReadyForDisplay(event.nativeEvent);\n    }\n  };\n\n  _nativeOnFullscreenUpdate = (event: { nativeEvent: FullscreenUpdateEvent }) => {\n    if (this.props.onIOSFullscreenUpdate && this.props.onFullscreenUpdate) {\n      console.warn(\n        \"You've supplied both `onIOSFullscreenUpdate` and `onFullscreenUpdate`. You're going to receive updates on both the callbacks.\"\n      );\n    } else if (this.props.onIOSFullscreenUpdate) {\n      console.warn(\n        \"You're using `onIOSFullscreenUpdate`. Please migrate your code to use `onFullscreenUpdate` instead.\"\n      );\n    }\n\n    if (this.props.onIOSFullscreenUpdate) {\n      this.props.onIOSFullscreenUpdate(event.nativeEvent);\n    }\n\n    if (this.props.onFullscreenUpdate) {\n      this.props.onFullscreenUpdate(event.nativeEvent);\n    }\n  };\n\n  _renderPoster = () =>\n    this.props.usePoster && this.state.showPoster ? (\n      // @ts-ignore: the react-native type declarations are overly restrictive\n      <Image style={[_STYLES.poster, this.props.posterStyle]} source={this.props.posterSource!} />\n    ) : null;\n\n  render() {\n    const source = getNativeSourceFromSource(this.props.source) || undefined;\n\n    let nativeResizeMode = ExpoVideoManagerConstants.ScaleNone;\n    if (this.props.resizeMode) {\n      let resizeMode = this.props.resizeMode;\n      if (resizeMode === ResizeMode.STRETCH) {\n        nativeResizeMode = ExpoVideoManagerConstants.ScaleToFill;\n      } else if (resizeMode === ResizeMode.CONTAIN) {\n        nativeResizeMode = ExpoVideoManagerConstants.ScaleAspectFit;\n      } else if (resizeMode === ResizeMode.COVER) {\n        nativeResizeMode = ExpoVideoManagerConstants.ScaleAspectFill;\n      }\n    }\n\n    // Set status via individual props\n    const status: PlaybackStatusToSet = { ...this.props.status };\n    [\n      'progressUpdateIntervalMillis',\n      'positionMillis',\n      'shouldPlay',\n      'rate',\n      'shouldCorrectPitch',\n      'volume',\n      'isMuted',\n      'isLooping',\n    ].forEach(prop => {\n      if (prop in this.props) {\n        status[prop] = this.props[prop];\n      }\n    });\n\n    // Replace selected native props\n    // @ts-ignore: TypeScript thinks \"children\" is not in the list of props\n    const nativeProps: NativeProps = {\n      ...omit(\n        this.props,\n        'source',\n        'onPlaybackStatusUpdate',\n        'usePoster',\n        'posterSource',\n        ...Object.keys(status)\n      ),\n      style: StyleSheet.flatten([_STYLES.base, this.props.style]),\n      source,\n      resizeMode: nativeResizeMode,\n      status,\n      onStatusUpdate: this._nativeOnPlaybackStatusUpdate,\n      onLoadStart: this._nativeOnLoadStart,\n      onLoad: this._nativeOnLoad,\n      onError: this._nativeOnError,\n      onReadyForDisplay: this._nativeOnReadyForDisplay,\n      onFullscreenUpdate: this._nativeOnFullscreenUpdate,\n    };\n\n    return (\n      <View style={nativeProps.style} pointerEvents=\"box-none\">\n        <ExponentVideo ref={this._nativeRef} {...nativeProps} style={_STYLES.video} />\n        {this._renderPoster()}\n      </View>\n    );\n  }\n}\n\nObject.assign(Video.prototype, PlaybackMixin);\n"]}